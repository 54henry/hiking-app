define(["dojo/on","esri/WebScene","dojo/dom","dojo/dom-construct","esri/geometry/Polyline","esri/geometry/geometryEngine","esri/config","esri/request","esri/layers/GraphicsLayer","esri/geometry/Point","esri/Graphic","esri/symbols/PointSymbol3D","esri/symbols/IconSymbol3DLayer","esri/views/SceneView","esri/layers/FeatureLayer","esri/tasks/support/Query","dojo/promise/all","esri/core/watchUtils","esri/renderers/UniqueValueRenderer","esri/symbols/LineSymbol3D","esri/symbols/LineSymbol3DLayer","esri/symbols/LabelSymbol3D","esri/layers/support/LabelClass","esri/symbols/TextSymbol3DLayer","esri/core/Accessor","esri/core/accessorSupport/decorators"], function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_31__, __WEBPACK_EXTERNAL_MODULE_32__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_34__, __WEBPACK_EXTERNAL_MODULE_35__, __WEBPACK_EXTERNAL_MODULE_36__, __WEBPACK_EXTERNAL_MODULE_37__, __WEBPACK_EXTERNAL_MODULE_38__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_23__, __WEBPACK_EXTERNAL_MODULE_24__, __WEBPACK_EXTERNAL_MODULE_25__, __WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_19__, __WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 6);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = {\r\n    scene: {\r\n        portalUrl: 'http://zrh.mapsdevext.arcgis.com',\r\n        websceneItemId: '7abaad52a4254f30ab1897079cad504a'\r\n    },\r\n    data: {\r\n        trailsServiceUrl: 'https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/SwissNationalParkTrails/FeatureServer',\r\n        trailAttributes: {\r\n            name: 'Name',\r\n            id: 'RouteId',\r\n            difficulty: 'Difficulty',\r\n            category: 'Category',\r\n            walktime: 'Hiketime',\r\n            status: 'Status',\r\n            ascent: 'Ascent',\r\n            description: 'Description'\r\n        },\r\n        filterOptions: {\r\n            singleChoice: ['difficulty', 'category'],\r\n            range: ['walktime', 'ascent']\r\n        }\r\n    },\r\n    colors: {\r\n        defaultTrail: '#db5353',\r\n        selectedTrail: '#f9a352'\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdHMvY29uZmlnLnRzP2RkOGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxrQkFBZTtJQUNiLEtBQUssRUFBRTtRQUNMLFNBQVMsRUFBRSxrQ0FBa0M7UUFDN0MsY0FBYyxFQUFFLGtDQUFrQztLQUNuRDtJQUNELElBQUksRUFBRTtRQUNKLGdCQUFnQixFQUFFLHlHQUF5RztRQUMzSCxlQUFlLEVBQUU7WUFDZixJQUFJLEVBQUUsTUFBTTtZQUNaLEVBQUUsRUFBRSxTQUFTO1lBQ2IsVUFBVSxFQUFFLFlBQVk7WUFDeEIsUUFBUSxFQUFFLFVBQVU7WUFDcEIsUUFBUSxFQUFFLFVBQVU7WUFDcEIsTUFBTSxFQUFFLFFBQVE7WUFDaEIsTUFBTSxFQUFFLFFBQVE7WUFDaEIsV0FBVyxFQUFFLGFBQWE7U0FDM0I7UUFDRCxhQUFhLEVBQUU7WUFDYixZQUFZLEVBQUUsQ0FBQyxZQUFZLEVBQUUsVUFBVSxDQUFDO1lBQ3hDLEtBQUssRUFBRSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUM7U0FDOUI7S0FDRjtJQUNELE1BQU0sRUFBRTtRQUNOLFlBQVksRUFBRSxTQUFTO1FBQ3ZCLGFBQWEsRUFBRSxTQUFTO0tBQ3pCO0NBQ0YiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcclxuICBzY2VuZToge1xyXG4gICAgcG9ydGFsVXJsOiAnaHR0cDovL3pyaC5tYXBzZGV2ZXh0LmFyY2dpcy5jb20nLFxyXG4gICAgd2Vic2NlbmVJdGVtSWQ6ICc3YWJhYWQ1MmE0MjU0ZjMwYWIxODk3MDc5Y2FkNTA0YSdcclxuICB9LFxyXG4gIGRhdGE6IHtcclxuICAgIHRyYWlsc1NlcnZpY2VVcmw6ICdodHRwczovL3NlcnZpY2VzLmFyY2dpcy5jb20vVjZaSEZyNnpkZ05adVZHMC9hcmNnaXMvcmVzdC9zZXJ2aWNlcy9Td2lzc05hdGlvbmFsUGFya1RyYWlscy9GZWF0dXJlU2VydmVyJyxcclxuICAgIHRyYWlsQXR0cmlidXRlczoge1xyXG4gICAgICBuYW1lOiAnTmFtZScsXHJcbiAgICAgIGlkOiAnUm91dGVJZCcsXHJcbiAgICAgIGRpZmZpY3VsdHk6ICdEaWZmaWN1bHR5JyxcclxuICAgICAgY2F0ZWdvcnk6ICdDYXRlZ29yeScsXHJcbiAgICAgIHdhbGt0aW1lOiAnSGlrZXRpbWUnLFxyXG4gICAgICBzdGF0dXM6ICdTdGF0dXMnLFxyXG4gICAgICBhc2NlbnQ6ICdBc2NlbnQnLFxyXG4gICAgICBkZXNjcmlwdGlvbjogJ0Rlc2NyaXB0aW9uJ1xyXG4gICAgfSxcclxuICAgIGZpbHRlck9wdGlvbnM6IHtcclxuICAgICAgc2luZ2xlQ2hvaWNlOiBbJ2RpZmZpY3VsdHknLCAnY2F0ZWdvcnknXSxcclxuICAgICAgcmFuZ2U6IFsnd2Fsa3RpbWUnLCAnYXNjZW50J11cclxuICAgIH1cclxuICB9LFxyXG4gIGNvbG9yczoge1xyXG4gICAgZGVmYXVsdFRyYWlsOiAnI2RiNTM1MycsXHJcbiAgICBzZWxlY3RlZFRyYWlsOiAnI2Y5YTM1MidcclxuICB9XHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3RzL2NvbmZpZy50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_1__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJkb2pvL2RvbVwiP2IwYWQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8xX187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJkb2pvL2RvbVwiXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_2__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJkb2pvL2RvbS1jb25zdHJ1Y3RcIj8wNzVkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfMl9fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiZG9qby9kb20tY29uc3RydWN0XCJcbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_3__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJkb2pvL29uXCI/M2UyYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzNfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImRvam8vb25cIlxuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_4__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL1dlYlNjZW5lXCI/ZTQ1YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzRfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImVzcmkvV2ViU2NlbmVcIlxuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_5__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL2NvbmZpZ1wiPzg1NGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV81X187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJlc3JpL2NvbmZpZ1wiXG4vLyBtb2R1bGUgaWQgPSA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(7);


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/* main application */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(8);\r\n__webpack_require__(9);\r\nvar State_1 = __webpack_require__(10);\r\nvar deviceUtils_1 = __webpack_require__(13);\r\nvar SceneElement_1 = __webpack_require__(14);\r\nvar LoadingPage_1 = __webpack_require__(28);\r\nvar Trail_1 = __webpack_require__(30);\r\nvar MenuPanel_1 = __webpack_require__(40);\r\nvar state = new State_1.default();\r\ndeviceUtils_1.default.init(state);\r\nvar loadingPage = new LoadingPage_1.default(state);\r\nvar sceneElement = new SceneElement_1.default(state);\r\nsceneElement.getZEnrichedTrails()\r\n    .then(function (features) {\r\n    state.trails = features.map(function (feature) {\r\n        return new Trail_1.default(feature);\r\n    });\r\n    var menuPanel = new MenuPanel_1.default(state.trails, state);\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdHMvbWFpbi50cz8wMGE4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxzQkFBc0I7O0FBRXRCLHVCQUE2QjtBQUM3Qix1QkFBNkI7QUFFN0Isc0NBQTRCO0FBQzVCLDRDQUEyQztBQUMzQyw2Q0FBZ0Q7QUFDaEQsNENBQTJDO0FBQzNDLHNDQUFpQztBQUNqQywwQ0FBdUM7QUFFdkMsSUFBSSxLQUFLLEdBQUcsSUFBSSxlQUFLLEVBQUUsQ0FBQztBQUN4QixxQkFBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN4QixJQUFJLFdBQVcsR0FBRyxJQUFJLHFCQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDekMsSUFBSSxZQUFZLEdBQUcsSUFBSSxzQkFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzNDLFlBQVksQ0FBQyxrQkFBa0IsRUFBRTtLQUM5QixJQUFJLENBQUMsVUFBQyxRQUFRO0lBQ2IsS0FBSyxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLFVBQUMsT0FBTztRQUNsQyxNQUFNLENBQUMsSUFBSSxlQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDNUIsQ0FBQyxDQUFDLENBQUM7SUFDSCxJQUFJLFNBQVMsR0FBRyxJQUFJLG1CQUFTLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztBQUNyRCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogbWFpbiBhcHBsaWNhdGlvbiAqL1xyXG5cclxuaW1wb3J0ICcuLi9zdHlsZS9yZXNldC5zY3NzJztcclxuaW1wb3J0ICcuLi9zdHlsZS9zdHlsZS5zY3NzJztcclxuXHJcbmltcG9ydCBTdGF0ZSBmcm9tICcuL1N0YXRlJztcclxuaW1wb3J0IGRldmljZVV0aWxzIGZyb20gJy4vdWkvZGV2aWNlVXRpbHMnO1xyXG5pbXBvcnQgU2NlbmVFbGVtZW50IGZyb20gJy4vc2NlbmUvU2NlbmVFbGVtZW50JztcclxuaW1wb3J0IExvYWRpbmdQYWdlIGZyb20gJy4vdWkvTG9hZGluZ1BhZ2UnO1xyXG5pbXBvcnQgVHJhaWwgZnJvbSAnLi9kYXRhL1RyYWlsJztcclxuaW1wb3J0IE1lbnVQYW5lbCBmcm9tICcuL3VpL01lbnVQYW5lbCc7XHJcblxyXG5sZXQgc3RhdGUgPSBuZXcgU3RhdGUoKTtcclxuZGV2aWNlVXRpbHMuaW5pdChzdGF0ZSk7XHJcbmxldCBsb2FkaW5nUGFnZSA9IG5ldyBMb2FkaW5nUGFnZShzdGF0ZSk7XHJcbmxldCBzY2VuZUVsZW1lbnQgPSBuZXcgU2NlbmVFbGVtZW50KHN0YXRlKTtcclxuc2NlbmVFbGVtZW50LmdldFpFbnJpY2hlZFRyYWlscygpXHJcbiAgLnRoZW4oKGZlYXR1cmVzKSA9PiB7XHJcbiAgICBzdGF0ZS50cmFpbHMgPSBmZWF0dXJlcy5tYXAoKGZlYXR1cmUpID0+IHtcclxuICAgICAgcmV0dXJuIG5ldyBUcmFpbChmZWF0dXJlKTtcclxuICAgIH0pO1xyXG4gICAgbGV0IG1lbnVQYW5lbCA9IG5ldyBNZW51UGFuZWwoc3RhdGUudHJhaWxzLCBzdGF0ZSk7XHJcbiAgfSk7XHJcblxyXG5cclxuXHJcblxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvdHMvbWFpbi50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUvcmVzZXQuc2Nzcz9jYjUzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3N0eWxlL3Jlc2V0LnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUvc3R5bGUuc2Nzcz9mM2U1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3N0eWxlL3N0eWxlLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Accessor = __webpack_require__(11);\r\nvar decorators_1 = __webpack_require__(12);\r\nvar State = /** @class */ (function (_super) {\r\n    __extends(State, _super);\r\n    function State() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.displayLoading = true;\r\n        _this.selectedTrailId = null;\r\n        _this.filteredTrailIds = [];\r\n        _this.filters = {\r\n            walktime: null,\r\n            ascent: null,\r\n            category: null,\r\n            difficulty: null\r\n        };\r\n        _this.device = null;\r\n        _this.currentBasemapId = null;\r\n        _this.view = null;\r\n        _this.trails = null;\r\n        return _this;\r\n    }\r\n    State.prototype.setSelectedTrailId = function (id) {\r\n        this.selectedTrailId = id;\r\n        if (this.selectedTrailId && this.visiblePanel !== 'detailPanel') {\r\n            this.visiblePanel = 'detailPanel';\r\n        }\r\n    };\r\n    State.prototype.setFilteredTrailIds = function (ids) {\r\n        this.filteredTrailIds = ids;\r\n        // check if the selected trail is in the filtered trails\r\n        if (this.filteredTrailIds.indexOf(this.selectedTrailId) === -1) {\r\n            this.selectedTrailId = null;\r\n        }\r\n    };\r\n    State.prototype.setFilter = function (property, value) {\r\n        //create a new filters object so that the watch notifies on every property change\r\n        this.filters = __assign({}, this.filters);\r\n        this.filters[property] = value;\r\n    };\r\n    __decorate([\r\n        decorators_1.property()\r\n    ], State.prototype, \"displayLoading\", void 0);\r\n    __decorate([\r\n        decorators_1.property()\r\n    ], State.prototype, \"selectedTrailId\", void 0);\r\n    __decorate([\r\n        decorators_1.property()\r\n    ], State.prototype, \"filteredTrailIds\", void 0);\r\n    __decorate([\r\n        decorators_1.property()\r\n    ], State.prototype, \"filters\", void 0);\r\n    __decorate([\r\n        decorators_1.property()\r\n    ], State.prototype, \"visiblePanel\", void 0);\r\n    __decorate([\r\n        decorators_1.property()\r\n    ], State.prototype, \"device\", void 0);\r\n    __decorate([\r\n        decorators_1.property()\r\n    ], State.prototype, \"currentBasemapId\", void 0);\r\n    __decorate([\r\n        decorators_1.property()\r\n    ], State.prototype, \"view\", void 0);\r\n    __decorate([\r\n        decorators_1.property()\r\n    ], State.prototype, \"trails\", void 0);\r\n    State = __decorate([\r\n        decorators_1.subclass()\r\n    ], State);\r\n    return State;\r\n}(decorators_1.declared(Accessor)));\r\nexports.default = State;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdHMvU3RhdGUudHM/ZjdmZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHVDQUFnRDtBQUdoRCwyQ0FBb0Y7QUFHcEY7SUFBbUMseUJBQWtCO0lBRHJEO1FBQUEscUVBNERDO1FBeERDLG9CQUFjLEdBQVksSUFBSSxDQUFDO1FBRy9CLHFCQUFlLEdBQVcsSUFBSSxDQUFDO1FBVS9CLHNCQUFnQixHQUFrQixFQUFFLENBQUM7UUFZckMsYUFBTyxHQUFZO1lBQ2pCLFFBQVEsRUFBRSxJQUFJO1lBQ2QsTUFBTSxFQUFFLElBQUk7WUFDWixRQUFRLEVBQUUsSUFBSTtZQUNkLFVBQVUsRUFBRSxJQUFJO1NBQ2pCO1FBZUQsWUFBTSxHQUFXLElBQUksQ0FBQztRQUd0QixzQkFBZ0IsR0FBVyxJQUFJLENBQUM7UUFHaEMsVUFBSSxHQUFjLElBQUksQ0FBQztRQUd2QixZQUFNLEdBQWlCLElBQUksQ0FBQzs7SUFFOUIsQ0FBQztJQW5EQyxrQ0FBa0IsR0FBbEIsVUFBbUIsRUFBVTtRQUMzQixJQUFJLENBQUMsZUFBZSxHQUFHLEVBQUUsQ0FBQztRQUMxQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsZUFBZSxJQUFJLElBQUksQ0FBQyxZQUFZLEtBQUssYUFBYSxDQUFDLENBQUMsQ0FBQztZQUNoRSxJQUFJLENBQUMsWUFBWSxHQUFHLGFBQWEsQ0FBQztRQUNwQyxDQUFDO0lBQ0gsQ0FBQztJQUtELG1DQUFtQixHQUFuQixVQUFvQixHQUFrQjtRQUNwQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsR0FBRyxDQUFDO1FBRTVCLHdEQUF3RDtRQUN4RCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDL0QsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7UUFDOUIsQ0FBQztJQUNILENBQUM7SUFVRCx5QkFBUyxHQUFULFVBQVUsUUFBZ0IsRUFBRSxLQUE2QjtRQUV2RCxpRkFBaUY7UUFDakYsSUFBSSxDQUFDLE9BQU8sZ0JBQ1AsSUFBSSxDQUFDLE9BQU8sQ0FDaEIsQ0FBQztRQUNGLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ2pDLENBQUM7SUF2Q0Q7UUFEQyxxQkFBUSxFQUFFO2lEQUNvQjtJQUcvQjtRQURDLHFCQUFRLEVBQUU7a0RBQ29CO0lBVS9CO1FBREMscUJBQVEsRUFBRTttREFDMEI7SUFZckM7UUFEQyxxQkFBUSxFQUFFOzBDQU1WO0lBWUQ7UUFEQyxxQkFBUSxFQUFFOytDQUNxRDtJQUdoRTtRQURDLHFCQUFRLEVBQUU7eUNBQ1c7SUFHdEI7UUFEQyxxQkFBUSxFQUFFO21EQUNxQjtJQUdoQztRQURDLHFCQUFRLEVBQUU7dUNBQ1k7SUFHdkI7UUFEQyxxQkFBUSxFQUFFO3lDQUNpQjtJQXpEVCxLQUFLO1FBRHpCLHFCQUFRLEVBQUU7T0FDVSxLQUFLLENBMkR6QjtJQUFELFlBQUM7Q0FBQSxDQTNEa0MscUJBQVEsQ0FBQyxRQUFRLENBQUMsR0EyRHBEO2tCQTNEb0IsS0FBSyIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBY2Nlc3NvciA9IHJlcXVpcmUoXCJlc3JpL2NvcmUvQWNjZXNzb3JcIik7XHJcbmltcG9ydCBTY2VuZVZpZXcgPSByZXF1aXJlKCdlc3JpL3ZpZXdzL1NjZW5lVmlldycpO1xyXG5pbXBvcnQgeyBGaWx0ZXJzLCBEZXZpY2UsIFRyYWlsIH0gZnJvbSAnLi90eXBlcyc7XHJcbmltcG9ydCB7IHN1YmNsYXNzLCBkZWNsYXJlZCwgcHJvcGVydHkgfSBmcm9tIFwiZXNyaS9jb3JlL2FjY2Vzc29yU3VwcG9ydC9kZWNvcmF0b3JzXCI7XHJcblxyXG5Ac3ViY2xhc3MoKVxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdGF0ZSBleHRlbmRzIGRlY2xhcmVkKEFjY2Vzc29yKSB7XHJcblxyXG4gIEBwcm9wZXJ0eSgpXHJcbiAgZGlzcGxheUxvYWRpbmc6IGJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICBAcHJvcGVydHkoKVxyXG4gIHNlbGVjdGVkVHJhaWxJZDogbnVtYmVyID0gbnVsbDtcclxuXHJcbiAgc2V0U2VsZWN0ZWRUcmFpbElkKGlkOiBudW1iZXIpIHtcclxuICAgIHRoaXMuc2VsZWN0ZWRUcmFpbElkID0gaWQ7XHJcbiAgICBpZiAodGhpcy5zZWxlY3RlZFRyYWlsSWQgJiYgdGhpcy52aXNpYmxlUGFuZWwgIT09ICdkZXRhaWxQYW5lbCcpIHtcclxuICAgICAgdGhpcy52aXNpYmxlUGFuZWwgPSAnZGV0YWlsUGFuZWwnO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQHByb3BlcnR5KClcclxuICBmaWx0ZXJlZFRyYWlsSWRzOiBBcnJheTxudW1iZXI+ID0gW107XHJcblxyXG4gIHNldEZpbHRlcmVkVHJhaWxJZHMoaWRzOiBBcnJheTxudW1iZXI+KSB7XHJcbiAgICB0aGlzLmZpbHRlcmVkVHJhaWxJZHMgPSBpZHM7XHJcblxyXG4gICAgLy8gY2hlY2sgaWYgdGhlIHNlbGVjdGVkIHRyYWlsIGlzIGluIHRoZSBmaWx0ZXJlZCB0cmFpbHNcclxuICAgIGlmICh0aGlzLmZpbHRlcmVkVHJhaWxJZHMuaW5kZXhPZih0aGlzLnNlbGVjdGVkVHJhaWxJZCkgPT09IC0xKSB7XHJcbiAgICAgIHRoaXMuc2VsZWN0ZWRUcmFpbElkID0gbnVsbDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBwcm9wZXJ0eSgpXHJcbiAgZmlsdGVyczogRmlsdGVycyA9IHtcclxuICAgIHdhbGt0aW1lOiBudWxsLFxyXG4gICAgYXNjZW50OiBudWxsLFxyXG4gICAgY2F0ZWdvcnk6IG51bGwsXHJcbiAgICBkaWZmaWN1bHR5OiBudWxsXHJcbiAgfVxyXG5cclxuICBzZXRGaWx0ZXIocHJvcGVydHk6IHN0cmluZywgdmFsdWU6IHN0cmluZyB8IEFycmF5PG51bWJlcj4pOiB2b2lkIHtcclxuXHJcbiAgICAvL2NyZWF0ZSBhIG5ldyBmaWx0ZXJzIG9iamVjdCBzbyB0aGF0IHRoZSB3YXRjaCBub3RpZmllcyBvbiBldmVyeSBwcm9wZXJ0eSBjaGFuZ2VcclxuICAgIHRoaXMuZmlsdGVycyA9IHtcclxuICAgICAgLi4udGhpcy5maWx0ZXJzXHJcbiAgICB9O1xyXG4gICAgdGhpcy5maWx0ZXJzW3Byb3BlcnR5XSA9IHZhbHVlO1xyXG4gIH1cclxuXHJcbiAgQHByb3BlcnR5KClcclxuICB2aXNpYmxlUGFuZWw6ICdzZWxlY3Rpb25QYW5lbCcgfCAnZGV0YWlsUGFuZWwnIHwgJ2Jhc2VtYXBQYW5lbCc7XHJcblxyXG4gIEBwcm9wZXJ0eSgpXHJcbiAgZGV2aWNlOiBEZXZpY2UgPSBudWxsO1xyXG5cclxuICBAcHJvcGVydHkoKVxyXG4gIGN1cnJlbnRCYXNlbWFwSWQ6IHN0cmluZyA9IG51bGw7XHJcblxyXG4gIEBwcm9wZXJ0eSgpXHJcbiAgdmlldzogU2NlbmVWaWV3ID0gbnVsbDtcclxuXHJcbiAgQHByb3BlcnR5KClcclxuICB0cmFpbHM6IEFycmF5PFRyYWlsPiA9IG51bGw7XHJcblxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy90cy9TdGF0ZS50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_11__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL2NvcmUvQWNjZXNzb3JcIj9kZjAwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjExLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzExX187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJlc3JpL2NvcmUvQWNjZXNzb3JcIlxuLy8gbW9kdWxlIGlkID0gMTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_12__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL2NvcmUvYWNjZXNzb3JTdXBwb3J0L2RlY29yYXRvcnNcIj83YjM0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjEyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzEyX187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJlc3JpL2NvcmUvYWNjZXNzb3JTdXBwb3J0L2RlY29yYXRvcnNcIlxuLy8gbW9kdWxlIGlkID0gMTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar mqDesktop = window.matchMedia('(min-width: 601px)');\r\nfunction getMedia() {\r\n    if (mqDesktop.matches) {\r\n        return 'desktop';\r\n    }\r\n    return 'mobilePortrait';\r\n}\r\nexports.default = {\r\n    init: function (state) {\r\n        function changeState(evt) {\r\n            var media = getMedia();\r\n            state.device = media;\r\n        }\r\n        mqDesktop.addListener(changeState);\r\n        changeState(mqDesktop);\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdHMvdWkvZGV2aWNlVXRpbHMudHM/OTc0ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLElBQUksU0FBUyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsb0JBQW9CLENBQUMsQ0FBQztBQUV4RDtJQUNFLEVBQUUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3RCLE1BQU0sQ0FBQyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUNELE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztBQUMxQixDQUFDO0FBRUQsa0JBQWU7SUFDYixJQUFJLFlBQUMsS0FBWTtRQUNmLHFCQUFxQixHQUFHO1lBQ3RCLElBQUksS0FBSyxHQUFXLFFBQVEsRUFBRSxDQUFDO1lBQy9CLEtBQUssQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLENBQUM7UUFDRCxTQUFTLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ25DLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN6QixDQUFDO0NBQ0YiLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGF0ZSwgRGV2aWNlIH0gZnJvbSAnLi4vdHlwZXMnO1xyXG5cclxubGV0IG1xRGVza3RvcCA9IHdpbmRvdy5tYXRjaE1lZGlhKCcobWluLXdpZHRoOiA2MDFweCknKTtcclxuXHJcbmZ1bmN0aW9uIGdldE1lZGlhKCk6IERldmljZSAge1xyXG4gIGlmIChtcURlc2t0b3AubWF0Y2hlcykge1xyXG4gICAgcmV0dXJuICdkZXNrdG9wJztcclxuICB9XHJcbiAgcmV0dXJuICdtb2JpbGVQb3J0cmFpdCc7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBpbml0KHN0YXRlOiBTdGF0ZSkge1xyXG4gICAgZnVuY3Rpb24gY2hhbmdlU3RhdGUoZXZ0KSB7XHJcbiAgICAgIGxldCBtZWRpYTogRGV2aWNlID0gZ2V0TWVkaWEoKTtcclxuICAgICAgc3RhdGUuZGV2aWNlID0gbWVkaWE7XHJcbiAgICB9XHJcbiAgICBtcURlc2t0b3AuYWRkTGlzdGVuZXIoY2hhbmdlU3RhdGUpO1xyXG4gICAgY2hhbmdlU3RhdGUobXFEZXNrdG9wKTtcclxuICB9XHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvdHMvdWkvZGV2aWNlVXRpbHMudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar config_1 = __webpack_require__(0);\r\nvar utils_1 = __webpack_require__(15);\r\nvar domConstruct = __webpack_require__(2);\r\nvar dom = __webpack_require__(1);\r\nvar WebScene = __webpack_require__(4);\r\nvar SceneView = __webpack_require__(22);\r\nvar FeatureLayer = __webpack_require__(23);\r\nvar Query = __webpack_require__(24);\r\nvar all = __webpack_require__(25);\r\nvar esriConfig = __webpack_require__(5);\r\nvar watchUtils = __webpack_require__(26);\r\n__webpack_require__(27);\r\nesriConfig.request.corsEnabledServers.push('wtb.maptiles.arcgis.com');\r\nvar SceneElement = /** @class */ (function () {\r\n    function SceneElement(state) {\r\n        var _this = this;\r\n        // set state on the scene element and listen to changes on the state\r\n        this.state = state;\r\n        this.view = this.initView();\r\n        this.state.view = this.view;\r\n        this.setViewPadding();\r\n        this.trailsLayer = this.initTrailsLayer();\r\n        this.view.map.add(this.trailsLayer);\r\n        this.addEventListeners();\r\n        //adding view to the window only for debugging reasons\r\n        window.view = this.view;\r\n        state.watch('selectedTrailId', function (value, oldValue) {\r\n            if (value) {\r\n                _this.selectFeature(value);\r\n            }\r\n            else {\r\n                _this.unselectFeature(oldValue);\r\n            }\r\n        });\r\n        state.watch('filteredTrailIds', function (value) {\r\n            // filter trails on the map\r\n        });\r\n        state.watch('device', function () {\r\n            _this.setViewPadding();\r\n        });\r\n        state.watch('currentBasemapId', function (id) {\r\n            _this.setCurrentBasemap(id);\r\n        });\r\n    }\r\n    SceneElement.prototype.setCurrentBasemap = function (id) {\r\n        var basemapGroup = this.view.map.layers.filter(function (layer) {\r\n            return (layer.title === 'Basemap');\r\n        }).getItemAt(0);\r\n        var activeLayer = basemapGroup.layers.filter(function (layer) {\r\n            if (layer.id === id) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }).getItemAt(0);\r\n        activeLayer.visible = true;\r\n    };\r\n    SceneElement.prototype.addEventListeners = function () {\r\n        var _this = this;\r\n        this.view.on(\"click\", function (event) {\r\n            _this.view.hitTest(event).then(function (response) {\r\n                var result = response.results[0];\r\n                if (result.graphic) {\r\n                    if (result.graphic.layer.title === 'Flickr') {\r\n                        _this.showImage(result.graphic, event);\r\n                    }\r\n                    else {\r\n                        if (result.graphic.layer.title === 'Hiking trails') {\r\n                            _this.state.setSelectedTrailId(result.graphic.attributes.RouteId);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    _this.state.setSelectedTrailId(null);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SceneElement.prototype.showImage = function (graphic, event) {\r\n        var _this = this;\r\n        // remove previous image (if any)\r\n        this.removeImage();\r\n        // a new container is created for each image\r\n        var flickrContainer = domConstruct.create('img', {\r\n            src: graphic.symbol.symbolLayers.getItemAt(0).resource.href,\r\n            alt: 'flickr image',\r\n            style: {\r\n                left: event.screenPoint.x - 25 + \"px\",\r\n                top: event.screenPoint.y - 25 + \"px\",\r\n                maxWidth: '50px'\r\n            },\r\n            id: 'flickrImage'\r\n        }, document.body);\r\n        // transition doesn't work without a timeout\r\n        window.setTimeout(function () {\r\n            flickrContainer.style.top = '20%';\r\n            flickrContainer.style.maxWidth = '400px';\r\n        }, 0);\r\n        // once the user interacts with the view the image should disappear\r\n        watchUtils.whenTrueOnce(this.view, 'interacting', function (value) {\r\n            if (value) {\r\n                _this.removeImage();\r\n            }\r\n        });\r\n    };\r\n    SceneElement.prototype.removeImage = function () {\r\n        if (dom.byId('flickrImage')) {\r\n            domConstruct.destroy('flickrImage');\r\n        }\r\n    };\r\n    SceneElement.prototype.initView = function () {\r\n        var webscene = new WebScene({\r\n            portalItem: {\r\n                id: config_1.default.scene.websceneItemId\r\n            }\r\n        });\r\n        return new SceneView({\r\n            container: 'scenePanel',\r\n            map: webscene,\r\n            constraints: {\r\n                tilt: {\r\n                    max: 80,\r\n                    mode: \"manual\"\r\n                }\r\n            },\r\n            qualityProfile: \"high\",\r\n            environment: {\r\n                lighting: {\r\n                    directShadowsEnabled: true,\r\n                    ambientOcclusionEnabled: true\r\n                },\r\n                atmosphereEnabled: true,\r\n                atmosphere: {\r\n                    quality: \"high\"\r\n                },\r\n                starsEnabled: false\r\n            },\r\n            ui: {\r\n                components: ['attribution']\r\n            },\r\n            popup: {\r\n                dockEnabled: false,\r\n                collapsed: true\r\n            }\r\n        });\r\n    };\r\n    SceneElement.prototype.setViewPadding = function () {\r\n        if (this.state.device === 'mobilePortrait') {\r\n            this.view.padding = {\r\n                left: 0\r\n            };\r\n        }\r\n        else {\r\n            this.view.padding = {\r\n                left: 350\r\n            };\r\n        }\r\n    };\r\n    SceneElement.prototype.initTrailsLayer = function () {\r\n        return new FeatureLayer({\r\n            url: config_1.default.data.trailsServiceUrl,\r\n            title: \"Hiking trails\",\r\n            outFields: [\"*\"],\r\n            renderer: utils_1.getTrailRenderer(),\r\n            elevationInfo: {\r\n                mode: 'relative-to-ground',\r\n                offset: 5\r\n            },\r\n            labelsVisible: true,\r\n            labelingInfo: utils_1.getLabelingInfo({ selection: null })\r\n        });\r\n    };\r\n    SceneElement.prototype.selectFeature = function (featureId) {\r\n        // change line symbology for the selected feature\r\n        var renderer = this.trailsLayer.renderer.clone();\r\n        renderer.uniqueValueInfos = utils_1.getUniqueValueInfos({ selection: featureId });\r\n        this.trailsLayer.renderer = renderer;\r\n        // change labeling for the selected feature\r\n        this.trailsLayer.labelingInfo = utils_1.getLabelingInfo({ selection: featureId });\r\n        // get trail geometry to zoom to it\r\n        var selectedTrail = this.state.trails.filter(function (trail) {\r\n            return (trail.id === featureId);\r\n        })[0];\r\n        this.view.goTo({ target: selectedTrail.geometry, tilt: 60 }, { speedFactor: 0.5 });\r\n        selectedTrail.flickrLayer.loadImages();\r\n        this.view.map.add(selectedTrail.flickrLayer);\r\n    };\r\n    SceneElement.prototype.unselectFeature = function (oldId) {\r\n        var renderer = this.trailsLayer.renderer.clone();\r\n        renderer.uniqueValueInfos = [];\r\n        this.trailsLayer.renderer = renderer;\r\n        this.trailsLayer.labelingInfo = utils_1.getLabelingInfo({ selection: null });\r\n        var selectedTrail = this.state.trails.filter(function (trail) {\r\n            return (trail.id === oldId);\r\n        })[0];\r\n        this.view.map.remove(selectedTrail.flickrLayer);\r\n        this.removeImage();\r\n    };\r\n    SceneElement.prototype.queryTrails = function () {\r\n        var layer = this.trailsLayer;\r\n        var query = new Query({\r\n            outFields: [\"*\"],\r\n            where: \"1=1\",\r\n            returnGeometry: true,\r\n            outSpatialReference: {\r\n                wkid: 4326\r\n            }\r\n        });\r\n        return layer.then(function () {\r\n            return layer.queryFeatures(query);\r\n        });\r\n    };\r\n    SceneElement.prototype.getZEnrichedTrails = function () {\r\n        var _this = this;\r\n        var view = this.view;\r\n        return this.queryTrails().then(function (result) {\r\n            _this.trails = result.features;\r\n            // for each feature query the z values of the geometry\r\n            var promises = result.features.map(function (feat) {\r\n                return view.map.ground.queryElevation(feat.geometry)\r\n                    .then(function (response) {\r\n                    feat.geometry = response.geometry;\r\n                    return feat;\r\n                });\r\n            });\r\n            return all(promises);\r\n        });\r\n    };\r\n    return SceneElement;\r\n}());\r\nexports.default = SceneElement;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar config_1 = __webpack_require__(0);\r\nvar UniqueValueRenderer = __webpack_require__(16);\r\nvar LineSymbol3D = __webpack_require__(17);\r\nvar LineSymbol3DLayer = __webpack_require__(18);\r\nvar LabelSymbol3D = __webpack_require__(19);\r\nvar LabelClass = __webpack_require__(20);\r\nvar TextSymbol3DLayer = __webpack_require__(21);\r\nfunction getTrailRenderer() {\r\n    return new UniqueValueRenderer({\r\n        field: config_1.default.data.trailAttributes.id,\r\n        defaultSymbol: createTrailSymbol({\r\n            selection: null\r\n        }),\r\n        uniqueValueInfos: []\r\n    });\r\n}\r\nexports.getTrailRenderer = getTrailRenderer;\r\n// function for creating symbols for trails when they are selected or not\r\nfunction createTrailSymbol(options) {\r\n    var color = options.selection ? config_1.default.colors.selectedTrail : config_1.default.colors.defaultTrail;\r\n    var size = options.selection ? 4 : 2;\r\n    return new LineSymbol3D({\r\n        symbolLayers: [\r\n            new LineSymbol3DLayer({\r\n                material: {\r\n                    color: color\r\n                },\r\n                size: size\r\n            })\r\n        ]\r\n    });\r\n}\r\nfunction getUniqueValueInfos(options) {\r\n    if (options.selection) {\r\n        return [{\r\n                value: options.selection,\r\n                symbol: createTrailSymbol(options)\r\n            }];\r\n    }\r\n}\r\nexports.getUniqueValueInfos = getUniqueValueInfos;\r\nfunction getLabelingInfo(options) {\r\n    if (options.selection) {\r\n        return [\r\n            createLabelClass(options),\r\n            createLabelClass({})\r\n        ];\r\n    }\r\n    else {\r\n        return [\r\n            createLabelClass({})\r\n        ];\r\n    }\r\n}\r\nexports.getLabelingInfo = getLabelingInfo;\r\nfunction createLabelClass(options) {\r\n    var color = (options.selection) ? config_1.default.colors.selectedTrail : config_1.default.colors.defaultTrail;\r\n    var labelClass = new LabelClass({\r\n        symbol: new LabelSymbol3D({\r\n            symbolLayers: [new TextSymbol3DLayer({\r\n                    material: {\r\n                        color: \"white\"\r\n                    },\r\n                    halo: {\r\n                        color: color,\r\n                        size: 1\r\n                    },\r\n                    font: {\r\n                        family: 'Open Sans Condensed',\r\n                        weight: 'bold'\r\n                    },\r\n                    size: 13\r\n                })],\r\n            verticalOffset: {\r\n                screenLength: 80,\r\n                maxWorldLength: 3000,\r\n                minWorldLength: 200\r\n            },\r\n            callout: {\r\n                type: \"line\",\r\n                size: 2,\r\n                color: \"white\",\r\n                border: {\r\n                    color: color\r\n                }\r\n            }\r\n        }),\r\n        labelPlacement: \"above-center\",\r\n        labelExpressionInfo: {\r\n            expression: \"$feature.\" + config_1.default.data.trailAttributes.name\r\n        }\r\n    });\r\n    if (options.selection) {\r\n        labelClass.where = config_1.default.data.trailAttributes.id + \" = \" + options.selection;\r\n    }\r\n    return labelClass;\r\n}\r\nexports.createLabelClass = createLabelClass;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdHMvc2NlbmUvdXRpbHMudHM/NzYyZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUErQjtBQUMvQixrREFBMEU7QUFDMUUsMkNBQTBEO0FBQzFELGdEQUFvRTtBQUNwRSw0Q0FBNEQ7QUFDNUQseUNBQTZEO0FBQzdELGdEQUFvRTtBQUVwRTtJQUNFLE1BQU0sQ0FBQyxJQUFJLG1CQUFtQixDQUFDO1FBQzdCLEtBQUssRUFBRSxnQkFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsRUFBRTtRQUNyQyxhQUFhLEVBQUUsaUJBQWlCLENBQUM7WUFDL0IsU0FBUyxFQUFFLElBQUk7U0FDaEIsQ0FBQztRQUNGLGdCQUFnQixFQUFFLEVBQUU7S0FDckIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQVJELDRDQVFDO0FBRUQseUVBQXlFO0FBQ3pFLDJCQUEyQixPQUFPO0lBRWhDLElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLGdCQUFNLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsZ0JBQU0sQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDO0lBQzNGLElBQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRXZDLE1BQU0sQ0FBQyxJQUFJLFlBQVksQ0FBQztRQUN0QixZQUFZLEVBQUU7WUFDWixJQUFJLGlCQUFpQixDQUFDO2dCQUNwQixRQUFRLEVBQUU7b0JBQ1IsS0FBSyxFQUFFLEtBQUs7aUJBQ2I7Z0JBQ0QsSUFBSSxFQUFFLElBQUk7YUFDWCxDQUFDO1NBQ0g7S0FDRixDQUFDLENBQUM7QUFFTCxDQUFDO0FBRUQsNkJBQW9DLE9BQU87SUFDekMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDdEIsTUFBTSxDQUFDLENBQUM7Z0JBQ04sS0FBSyxFQUFFLE9BQU8sQ0FBQyxTQUFTO2dCQUN4QixNQUFNLEVBQUUsaUJBQWlCLENBQUMsT0FBTyxDQUFDO2FBQ25DLENBQUM7SUFDSixDQUFDO0FBQ0gsQ0FBQztBQVBELGtEQU9DO0FBRUQseUJBQWdDLE9BQU87SUFDckMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDdEIsTUFBTSxDQUFDO1lBQ0wsZ0JBQWdCLENBQUMsT0FBTyxDQUFDO1lBQ3pCLGdCQUFnQixDQUFDLEVBQUUsQ0FBQztTQUNyQjtJQUNILENBQUM7SUFDRCxJQUFJLENBQUMsQ0FBQztRQUNKLE1BQU0sQ0FBQztZQUNMLGdCQUFnQixDQUFDLEVBQUUsQ0FBQztTQUNyQjtJQUNILENBQUM7QUFDSCxDQUFDO0FBWkQsMENBWUM7QUFFRCwwQkFBaUMsT0FBTztJQUV0QyxJQUFNLEtBQUssR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsZ0JBQU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxnQkFBTSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUM7SUFFN0YsSUFBSSxVQUFVLEdBQUcsSUFBSSxVQUFVLENBQUM7UUFDOUIsTUFBTSxFQUFFLElBQUksYUFBYSxDQUFDO1lBQ3hCLFlBQVksRUFBRSxDQUFDLElBQUksaUJBQWlCLENBQUM7b0JBQ25DLFFBQVEsRUFBRTt3QkFDUixLQUFLLEVBQUUsT0FBTztxQkFDZjtvQkFDRCxJQUFJLEVBQUU7d0JBQ0osS0FBSyxFQUFFLEtBQUs7d0JBQ1osSUFBSSxFQUFFLENBQUM7cUJBQ1I7b0JBQ0QsSUFBSSxFQUFFO3dCQUNKLE1BQU0sRUFBRSxxQkFBcUI7d0JBQzdCLE1BQU0sRUFBRSxNQUFNO3FCQUNmO29CQUNELElBQUksRUFBRSxFQUFFO2lCQUNULENBQUMsQ0FBQztZQUNILGNBQWMsRUFBRTtnQkFDZCxZQUFZLEVBQUUsRUFBRTtnQkFDaEIsY0FBYyxFQUFFLElBQUk7Z0JBQ3BCLGNBQWMsRUFBRSxHQUFHO2FBQ3BCO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLElBQUksRUFBRSxNQUFNO2dCQUNaLElBQUksRUFBRSxDQUFDO2dCQUNQLEtBQUssRUFBRSxPQUFPO2dCQUNkLE1BQU0sRUFBRTtvQkFDTixLQUFLLEVBQUUsS0FBSztpQkFDYjthQUNGO1NBQ0YsQ0FBQztRQUNGLGNBQWMsRUFBRSxjQUFjO1FBQzlCLG1CQUFtQixFQUFFO1lBQ25CLFVBQVUsRUFBRSxjQUFZLGdCQUFNLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFNO1NBQzNEO0tBQ0YsQ0FBQyxDQUFDO0lBQ0gsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDdEIsVUFBVSxDQUFDLEtBQUssR0FBTSxnQkFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsRUFBRSxXQUFNLE9BQU8sQ0FBQyxTQUFXO0lBQy9FLENBQUM7SUFFRCxNQUFNLENBQUMsVUFBVSxDQUFDO0FBQ3BCLENBQUM7QUE1Q0QsNENBNENDIiwiZmlsZSI6IjE1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnO1xyXG5pbXBvcnQgKiBhcyBVbmlxdWVWYWx1ZVJlbmRlcmVyIGZyb20gJ2VzcmkvcmVuZGVyZXJzL1VuaXF1ZVZhbHVlUmVuZGVyZXInO1xyXG5pbXBvcnQgKiBhcyBMaW5lU3ltYm9sM0QgZnJvbSAnZXNyaS9zeW1ib2xzL0xpbmVTeW1ib2wzRCc7XHJcbmltcG9ydCAqIGFzIExpbmVTeW1ib2wzRExheWVyIGZyb20gJ2Vzcmkvc3ltYm9scy9MaW5lU3ltYm9sM0RMYXllcic7XHJcbmltcG9ydCAqIGFzIExhYmVsU3ltYm9sM0QgZnJvbSAnZXNyaS9zeW1ib2xzL0xhYmVsU3ltYm9sM0QnO1xyXG5pbXBvcnQgKiBhcyBMYWJlbENsYXNzIGZyb20gJ2VzcmkvbGF5ZXJzL3N1cHBvcnQvTGFiZWxDbGFzcyc7XHJcbmltcG9ydCAqIGFzIFRleHRTeW1ib2wzRExheWVyIGZyb20gJ2Vzcmkvc3ltYm9scy9UZXh0U3ltYm9sM0RMYXllcic7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHJhaWxSZW5kZXJlcigpOlVuaXF1ZVZhbHVlUmVuZGVyZXIge1xyXG4gIHJldHVybiBuZXcgVW5pcXVlVmFsdWVSZW5kZXJlcih7XHJcbiAgICBmaWVsZDogY29uZmlnLmRhdGEudHJhaWxBdHRyaWJ1dGVzLmlkLFxyXG4gICAgZGVmYXVsdFN5bWJvbDogY3JlYXRlVHJhaWxTeW1ib2woe1xyXG4gICAgICBzZWxlY3Rpb246IG51bGxcclxuICAgIH0pLFxyXG4gICAgdW5pcXVlVmFsdWVJbmZvczogW11cclxuICB9KTtcclxufVxyXG5cclxuLy8gZnVuY3Rpb24gZm9yIGNyZWF0aW5nIHN5bWJvbHMgZm9yIHRyYWlscyB3aGVuIHRoZXkgYXJlIHNlbGVjdGVkIG9yIG5vdFxyXG5mdW5jdGlvbiBjcmVhdGVUcmFpbFN5bWJvbChvcHRpb25zKSB7XHJcblxyXG4gIGNvbnN0IGNvbG9yID0gb3B0aW9ucy5zZWxlY3Rpb24gPyBjb25maWcuY29sb3JzLnNlbGVjdGVkVHJhaWwgOiBjb25maWcuY29sb3JzLmRlZmF1bHRUcmFpbDtcclxuICBjb25zdCBzaXplID0gb3B0aW9ucy5zZWxlY3Rpb24gPyA0IDogMjtcclxuXHJcbiAgcmV0dXJuIG5ldyBMaW5lU3ltYm9sM0Qoe1xyXG4gICAgc3ltYm9sTGF5ZXJzOiBbXHJcbiAgICAgIG5ldyBMaW5lU3ltYm9sM0RMYXllcih7XHJcbiAgICAgICAgbWF0ZXJpYWw6IHtcclxuICAgICAgICAgIGNvbG9yOiBjb2xvclxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2l6ZTogc2l6ZVxyXG4gICAgICB9KVxyXG4gICAgXVxyXG4gIH0pO1xyXG5cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFVuaXF1ZVZhbHVlSW5mb3Mob3B0aW9ucykge1xyXG4gIGlmIChvcHRpb25zLnNlbGVjdGlvbikge1xyXG4gICAgcmV0dXJuIFt7XHJcbiAgICAgIHZhbHVlOiBvcHRpb25zLnNlbGVjdGlvbixcclxuICAgICAgc3ltYm9sOiBjcmVhdGVUcmFpbFN5bWJvbChvcHRpb25zKVxyXG4gICAgfV1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRMYWJlbGluZ0luZm8ob3B0aW9ucykge1xyXG4gIGlmIChvcHRpb25zLnNlbGVjdGlvbikge1xyXG4gICAgcmV0dXJuIFtcclxuICAgICAgY3JlYXRlTGFiZWxDbGFzcyhvcHRpb25zKSxcclxuICAgICAgY3JlYXRlTGFiZWxDbGFzcyh7fSlcclxuICAgIF1cclxuICB9XHJcbiAgZWxzZSB7XHJcbiAgICByZXR1cm4gW1xyXG4gICAgICBjcmVhdGVMYWJlbENsYXNzKHt9KVxyXG4gICAgXVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUxhYmVsQ2xhc3Mob3B0aW9ucykge1xyXG5cclxuICBjb25zdCBjb2xvciA9IChvcHRpb25zLnNlbGVjdGlvbikgPyBjb25maWcuY29sb3JzLnNlbGVjdGVkVHJhaWwgOiBjb25maWcuY29sb3JzLmRlZmF1bHRUcmFpbDtcclxuXHJcbiAgbGV0IGxhYmVsQ2xhc3MgPSBuZXcgTGFiZWxDbGFzcyh7XHJcbiAgICBzeW1ib2w6IG5ldyBMYWJlbFN5bWJvbDNEKHtcclxuICAgICAgc3ltYm9sTGF5ZXJzOiBbbmV3IFRleHRTeW1ib2wzRExheWVyKHtcclxuICAgICAgICBtYXRlcmlhbDoge1xyXG4gICAgICAgICAgY29sb3I6IFwid2hpdGVcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaGFsbzoge1xyXG4gICAgICAgICAgY29sb3I6IGNvbG9yLFxyXG4gICAgICAgICAgc2l6ZTogMVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZm9udDoge1xyXG4gICAgICAgICAgZmFtaWx5OiAnT3BlbiBTYW5zIENvbmRlbnNlZCcsXHJcbiAgICAgICAgICB3ZWlnaHQ6ICdib2xkJ1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2l6ZTogMTNcclxuICAgICAgfSldLFxyXG4gICAgICB2ZXJ0aWNhbE9mZnNldDoge1xyXG4gICAgICAgIHNjcmVlbkxlbmd0aDogODAsXHJcbiAgICAgICAgbWF4V29ybGRMZW5ndGg6IDMwMDAsXHJcbiAgICAgICAgbWluV29ybGRMZW5ndGg6IDIwMFxyXG4gICAgICB9LFxyXG4gICAgICBjYWxsb3V0OiB7XHJcbiAgICAgICAgdHlwZTogXCJsaW5lXCIsXHJcbiAgICAgICAgc2l6ZTogMixcclxuICAgICAgICBjb2xvcjogXCJ3aGl0ZVwiLFxyXG4gICAgICAgIGJvcmRlcjoge1xyXG4gICAgICAgICAgY29sb3I6IGNvbG9yXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KSxcclxuICAgIGxhYmVsUGxhY2VtZW50OiBcImFib3ZlLWNlbnRlclwiLFxyXG4gICAgbGFiZWxFeHByZXNzaW9uSW5mbzoge1xyXG4gICAgICBleHByZXNzaW9uOiBgJGZlYXR1cmUuJHtjb25maWcuZGF0YS50cmFpbEF0dHJpYnV0ZXMubmFtZX1gXHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgaWYgKG9wdGlvbnMuc2VsZWN0aW9uKSB7XHJcbiAgICBsYWJlbENsYXNzLndoZXJlID0gYCR7Y29uZmlnLmRhdGEudHJhaWxBdHRyaWJ1dGVzLmlkfSA9ICR7b3B0aW9ucy5zZWxlY3Rpb259YFxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGxhYmVsQ2xhc3M7XHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3RzL3NjZW5lL3V0aWxzLnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///15\n");

/***/ }),
/* 16 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_16__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL3JlbmRlcmVycy9VbmlxdWVWYWx1ZVJlbmRlcmVyXCI/YTU2NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8xNl9fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiZXNyaS9yZW5kZXJlcnMvVW5pcXVlVmFsdWVSZW5kZXJlclwiXG4vLyBtb2R1bGUgaWQgPSAxNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n");

/***/ }),
/* 17 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_17__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL3N5bWJvbHMvTGluZVN5bWJvbDNEXCI/YWJkMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8xN19fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiZXNyaS9zeW1ib2xzL0xpbmVTeW1ib2wzRFwiXG4vLyBtb2R1bGUgaWQgPSAxN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///17\n");

/***/ }),
/* 18 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_18__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL3N5bWJvbHMvTGluZVN5bWJvbDNETGF5ZXJcIj85ZDFkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzE4X187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJlc3JpL3N5bWJvbHMvTGluZVN5bWJvbDNETGF5ZXJcIlxuLy8gbW9kdWxlIGlkID0gMThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///18\n");

/***/ }),
/* 19 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_19__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL3N5bWJvbHMvTGFiZWxTeW1ib2wzRFwiP2U4Y2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfMTlfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImVzcmkvc3ltYm9scy9MYWJlbFN5bWJvbDNEXCJcbi8vIG1vZHVsZSBpZCA9IDE5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///19\n");

/***/ }),
/* 20 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_20__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL2xheWVycy9zdXBwb3J0L0xhYmVsQ2xhc3NcIj81YTZkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzIwX187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJlc3JpL2xheWVycy9zdXBwb3J0L0xhYmVsQ2xhc3NcIlxuLy8gbW9kdWxlIGlkID0gMjBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///20\n");

/***/ }),
/* 21 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_21__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL3N5bWJvbHMvVGV4dFN5bWJvbDNETGF5ZXJcIj9iZjcwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzIxX187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJlc3JpL3N5bWJvbHMvVGV4dFN5bWJvbDNETGF5ZXJcIlxuLy8gbW9kdWxlIGlkID0gMjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21\n");

/***/ }),
/* 22 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_22__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL3ZpZXdzL1NjZW5lVmlld1wiPzliYTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfMjJfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImVzcmkvdmlld3MvU2NlbmVWaWV3XCJcbi8vIG1vZHVsZSBpZCA9IDIyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///22\n");

/***/ }),
/* 23 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_23__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL2xheWVycy9GZWF0dXJlTGF5ZXJcIj9mZGVmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzIzX187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJlc3JpL2xheWVycy9GZWF0dXJlTGF5ZXJcIlxuLy8gbW9kdWxlIGlkID0gMjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n");

/***/ }),
/* 24 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_24__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL3Rhc2tzL3N1cHBvcnQvUXVlcnlcIj9mNDBmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzI0X187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJlc3JpL3Rhc2tzL3N1cHBvcnQvUXVlcnlcIlxuLy8gbW9kdWxlIGlkID0gMjRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///24\n");

/***/ }),
/* 25 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_25__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJkb2pvL3Byb21pc2UvYWxsXCI/ZGJhYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIyNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8yNV9fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiZG9qby9wcm9taXNlL2FsbFwiXG4vLyBtb2R1bGUgaWQgPSAyNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///25\n");

/***/ }),
/* 26 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_26__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL2NvcmUvd2F0Y2hVdGlsc1wiP2I5YTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfMjZfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImVzcmkvY29yZS93YXRjaFV0aWxzXCJcbi8vIG1vZHVsZSBpZCA9IDI2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///26\n");

/***/ }),
/* 27 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUvc2NlbmUtcGFuZWwuc2Nzcz8wNzBkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9zdHlsZS9zY2VuZS1wYW5lbC5zY3NzXG4vLyBtb2R1bGUgaWQgPSAyN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///27\n");

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dom = __webpack_require__(1);\r\nvar on = __webpack_require__(3);\r\n__webpack_require__(29);\r\nvar LoadingPage = /** @class */ (function () {\r\n    function LoadingPage(state) {\r\n        var _this = this;\r\n        this.container = dom.byId('starterPage');\r\n        this.state = state;\r\n        state.watch('displayLoading', function (value) {\r\n            if (!value) {\r\n                _this.container.style.display = 'none';\r\n            }\r\n            else {\r\n                _this.container.style.display = 'table';\r\n            }\r\n        });\r\n        on(dom.byId('showMap'), 'click', function () {\r\n            state.displayLoading = false;\r\n        });\r\n    }\r\n    return LoadingPage;\r\n}());\r\nexports.default = LoadingPage;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdHMvdWkvTG9hZGluZ1BhZ2UudHM/NDBlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlDQUFnQztBQUNoQyxnQ0FBOEI7QUFFOUIsd0JBQXVDO0FBR3ZDO0lBS0UscUJBQVksS0FBSztRQUFqQixpQkFpQkM7UUFoQkMsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBRW5CLEtBQUssQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLEVBQUUsVUFBQyxLQUFLO1lBQ2xDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztnQkFDWCxLQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1lBQ3hDLENBQUM7WUFDRCxJQUFJLENBQUMsQ0FBQztnQkFDSixLQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1lBQ3pDLENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUdILEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLE9BQU8sRUFBRTtZQUMvQixLQUFLLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQztRQUMvQixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFDSCxrQkFBQztBQUFELENBQUMiLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBkb20gZnJvbSAnZG9qby9kb20nO1xyXG5pbXBvcnQgKiBhcyBvbiBmcm9tICdkb2pvL29uJztcclxuXHJcbmltcG9ydCAnLi4vLi4vc3R5bGUvbG9hZGluZy1wYWdlLnNjc3MnO1xyXG5pbXBvcnQgeyBTdGF0ZSB9IGZyb20gJy4uL3R5cGVzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvYWRpbmdQYWdlIHtcclxuXHJcbiAgY29udGFpbmVyO1xyXG4gIHN0YXRlOiBTdGF0ZTtcclxuXHJcbiAgY29uc3RydWN0b3Ioc3RhdGUpIHtcclxuICAgIHRoaXMuY29udGFpbmVyID0gZG9tLmJ5SWQoJ3N0YXJ0ZXJQYWdlJyk7XHJcbiAgICB0aGlzLnN0YXRlID0gc3RhdGU7XHJcblxyXG4gICAgc3RhdGUud2F0Y2goJ2Rpc3BsYXlMb2FkaW5nJywgKHZhbHVlKSA9PiB7XHJcbiAgICAgIGlmICghdmFsdWUpIHtcclxuICAgICAgICB0aGlzLmNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2Uge1xyXG4gICAgICAgIHRoaXMuY29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAndGFibGUnO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgb24oZG9tLmJ5SWQoJ3Nob3dNYXAnKSwgJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICBzdGF0ZS5kaXNwbGF5TG9hZGluZyA9IGZhbHNlO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3RzL3VpL0xvYWRpbmdQYWdlLnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///28\n");

/***/ }),
/* 29 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUvbG9hZGluZy1wYWdlLnNjc3M/MmRkYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvc3R5bGUvbG9hZGluZy1wYWdlLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDI5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///29\n");

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar config_1 = __webpack_require__(0);\r\nvar Polyline = __webpack_require__(31);\r\nvar geometryEngine = __webpack_require__(32);\r\nvar FlickrLayer_1 = __webpack_require__(33);\r\nvar Trail = /** @class */ (function () {\r\n    function Trail(feature) {\r\n        this.geometry = feature.geometry;\r\n        // add attribute data based on the mapping in the configuration file\r\n        var attributeMap = config_1.default.data.trailAttributes;\r\n        for (var prop in attributeMap) {\r\n            this[prop] = feature.attributes[attributeMap[prop]];\r\n        }\r\n        this.profileData = this.getAltitudeProfileData(feature.geometry);\r\n        this.flickrLayer = new FlickrLayer_1.default(this.geometry.extent);\r\n    }\r\n    Trail.prototype.getAltitudeProfileData = function (geometry) {\r\n        var points = [];\r\n        var totalLength = 0;\r\n        var path = geometry.paths[0];\r\n        var i = 0, j;\r\n        points.push({ point: path[0], length: totalLength, value: Math.round(path[0][2]) });\r\n        while (i < path.length) {\r\n            for (j = i + 1; j < path.length; j++) {\r\n                var tempLine = new Polyline({\r\n                    paths: [path.slice(i, j + 1)],\r\n                    hasZ: true,\r\n                    spatialReference: { wkid: 4326 }\r\n                });\r\n                var length_1 = geometryEngine.geodesicLength(tempLine, \"meters\");\r\n                if (length_1 > 10) {\r\n                    totalLength += length_1;\r\n                    points.push({ point: path[j], length: Math.round(totalLength / 100) / 10, value: Math.round(path[i][2]) });\r\n                    break;\r\n                }\r\n            }\r\n            i = j;\r\n        }\r\n        return points;\r\n    };\r\n    return Trail;\r\n}());\r\nexports.default = Trail;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdHMvZGF0YS9UcmFpbC50cz9jMDQzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQStCO0FBQy9CLHVDQUFtRDtBQUNuRCw2Q0FBK0Q7QUFFL0QsNENBQStDO0FBRS9DO0lBTUUsZUFBWSxPQUFPO1FBRWpCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQztRQUVqQyxvRUFBb0U7UUFDcEUsSUFBTSxZQUFZLEdBQUcsZ0JBQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDO1FBQ2pELEdBQUcsQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLFlBQVksQ0FBQyxDQUFDLENBQUM7WUFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDdEQsQ0FBQztRQUVELElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUVqRSxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUkscUJBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFFTyxzQ0FBc0IsR0FBOUIsVUFBK0IsUUFBaUI7UUFFOUMsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ2hCLElBQUksV0FBVyxHQUFHLENBQUMsQ0FBQztRQUNwQixJQUFNLElBQUksR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQy9CLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFYixNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztRQUVsRixPQUFPLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDdkIsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztnQkFFbkMsSUFBSSxRQUFRLEdBQUcsSUFBSSxRQUFRLENBQUM7b0JBQzFCLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDN0IsSUFBSSxFQUFFLElBQUk7b0JBQ1YsZ0JBQWdCLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFO2lCQUNqQyxDQUFDLENBQUM7Z0JBRUgsSUFBTSxRQUFNLEdBQUcsY0FBYyxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUM7Z0JBRWpFLEVBQUUsQ0FBQyxDQUFDLFFBQU0sR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO29CQUNoQixXQUFXLElBQUksUUFBTSxDQUFDO29CQUN0QixNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEdBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztvQkFDdkcsS0FBSyxDQUFDO2dCQUNSLENBQUM7WUFDSCxDQUFDO1lBQ0QsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNSLENBQUM7UUFDRixNQUFNLENBQUMsTUFBTSxDQUFDO0lBQ2YsQ0FBQztJQUVILFlBQUM7QUFBRCxDQUFDIiwiZmlsZSI6IjMwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnO1xyXG5pbXBvcnQgKiBhcyBQb2x5bGluZSBmcm9tICdlc3JpL2dlb21ldHJ5L1BvbHlsaW5lJztcclxuaW1wb3J0ICogYXMgZ2VvbWV0cnlFbmdpbmUgZnJvbSAnZXNyaS9nZW9tZXRyeS9nZW9tZXRyeUVuZ2luZSc7XHJcblxyXG5pbXBvcnQgRmxpY2tyTGF5ZXIgZnJvbSAnLi4vc2NlbmUvRmxpY2tyTGF5ZXInO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHJhaWwge1xyXG5cclxuICBnZW9tZXRyeTogUG9seWxpbmU7XHJcbiAgcHJvZmlsZURhdGE6IEFycmF5PGFueT47XHJcbiAgZmxpY2tyTGF5ZXI6IEZsaWNrckxheWVyO1xyXG5cclxuICBjb25zdHJ1Y3RvcihmZWF0dXJlKSB7XHJcblxyXG4gICAgdGhpcy5nZW9tZXRyeSA9IGZlYXR1cmUuZ2VvbWV0cnk7XHJcblxyXG4gICAgLy8gYWRkIGF0dHJpYnV0ZSBkYXRhIGJhc2VkIG9uIHRoZSBtYXBwaW5nIGluIHRoZSBjb25maWd1cmF0aW9uIGZpbGVcclxuICAgIGNvbnN0IGF0dHJpYnV0ZU1hcCA9IGNvbmZpZy5kYXRhLnRyYWlsQXR0cmlidXRlcztcclxuICAgIGZvciAobGV0IHByb3AgaW4gYXR0cmlidXRlTWFwKSB7XHJcbiAgICAgIHRoaXNbcHJvcF0gPSBmZWF0dXJlLmF0dHJpYnV0ZXNbYXR0cmlidXRlTWFwW3Byb3BdXTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnByb2ZpbGVEYXRhID0gdGhpcy5nZXRBbHRpdHVkZVByb2ZpbGVEYXRhKGZlYXR1cmUuZ2VvbWV0cnkpO1xyXG5cclxuICAgIHRoaXMuZmxpY2tyTGF5ZXIgPSBuZXcgRmxpY2tyTGF5ZXIodGhpcy5nZW9tZXRyeS5leHRlbnQpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBnZXRBbHRpdHVkZVByb2ZpbGVEYXRhKGdlb21ldHJ5OlBvbHlsaW5lKTpBcnJheTxhbnk+IHtcclxuXHJcbiAgICBsZXQgcG9pbnRzID0gW107XHJcbiAgICBsZXQgdG90YWxMZW5ndGggPSAwO1xyXG4gICAgY29uc3QgcGF0aCA9IGdlb21ldHJ5LnBhdGhzWzBdO1xyXG4gICAgbGV0IGkgPSAwLCBqO1xyXG5cclxuICAgIHBvaW50cy5wdXNoKHtwb2ludDogcGF0aFswXSwgbGVuZ3RoOiB0b3RhbExlbmd0aCwgdmFsdWU6IE1hdGgucm91bmQocGF0aFswXVsyXSl9KTtcclxuXHJcbiAgICB3aGlsZSAoaSA8IHBhdGgubGVuZ3RoKSB7XHJcbiAgICAgIGZvciAoaiA9IGkrMTsgaiA8IHBhdGgubGVuZ3RoOyBqKyspIHtcclxuXHJcbiAgICAgICAgbGV0IHRlbXBMaW5lID0gbmV3IFBvbHlsaW5lKHtcclxuICAgICAgICAgIHBhdGhzOiBbcGF0aC5zbGljZShpLCBqICsgMSldLFxyXG4gICAgICAgICAgaGFzWjogdHJ1ZSxcclxuICAgICAgICAgIHNwYXRpYWxSZWZlcmVuY2U6IHsgd2tpZDogNDMyNiB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGNvbnN0IGxlbmd0aCA9IGdlb21ldHJ5RW5naW5lLmdlb2Rlc2ljTGVuZ3RoKHRlbXBMaW5lLCBcIm1ldGVyc1wiKTtcclxuXHJcbiAgICAgICAgaWYgKGxlbmd0aCA+IDEwKSB7XHJcbiAgICAgICAgICB0b3RhbExlbmd0aCArPSBsZW5ndGg7XHJcbiAgICAgICAgICBwb2ludHMucHVzaCh7cG9pbnQ6IHBhdGhbal0sIGxlbmd0aDogTWF0aC5yb3VuZCh0b3RhbExlbmd0aC8xMDApIC8gMTAsIHZhbHVlOiBNYXRoLnJvdW5kKHBhdGhbaV1bMl0pfSk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaSA9IGo7XHJcbiAgICB9XHJcbiAgIHJldHVybiBwb2ludHM7XHJcbiAgfVxyXG5cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvdHMvZGF0YS9UcmFpbC50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///30\n");

/***/ }),
/* 31 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_31__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL2dlb21ldHJ5L1BvbHlsaW5lXCI/YzczMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8zMV9fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiZXNyaS9nZW9tZXRyeS9Qb2x5bGluZVwiXG4vLyBtb2R1bGUgaWQgPSAzMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///31\n");

/***/ }),
/* 32 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_32__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL2dlb21ldHJ5L2dlb21ldHJ5RW5naW5lXCI/ODM4OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8zMl9fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiZXNyaS9nZW9tZXRyeS9nZW9tZXRyeUVuZ2luZVwiXG4vLyBtb2R1bGUgaWQgPSAzMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///32\n");

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar esriConfig = __webpack_require__(5);\r\nvar esriRequest = __webpack_require__(34);\r\nvar GraphicsLayer = __webpack_require__(35);\r\nvar Point = __webpack_require__(36);\r\nvar Graphic = __webpack_require__(37);\r\nvar PointSymbol3D = __webpack_require__(38);\r\nvar IconSymbol3DLayer = __webpack_require__(39);\r\nfunction setImage(index, photos, layer) {\r\n    var photo = photos[index];\r\n    esriRequest(\"https://api.flickr.com/services/rest/?\\n    method=flickr.photos.geo.getLocation&\\n    api_key=d2eeadac35a3dfc3fb64a92e7c792de0&\\n    photo_id=\" + photo.getAttribute('id'), { responseType: 'xml' })\r\n        .then(function (response) {\r\n        var location = response.data.getElementsByTagName('location')[0];\r\n        var imgUrl = \"https://farm\" + photo.getAttribute('farm') + \".staticflickr.com/\" + photo.getAttribute('server') + \"/\" + photo.getAttribute('id') + \"_\" + photo.getAttribute('secret') + \".jpg\";\r\n        var billboard = new PointSymbol3D({\r\n            symbolLayers: [new IconSymbol3DLayer({\r\n                    size: 50,\r\n                    resource: { href: imgUrl },\r\n                    outline: {\r\n                        color: 'white',\r\n                        size: '5px'\r\n                    }\r\n                })],\r\n            verticalOffset: {\r\n                screenLength: 50,\r\n                maxWorldLength: 3000,\r\n                minWorldLength: 20\r\n            },\r\n            callout: {\r\n                type: \"line\",\r\n                size: 2,\r\n                color: \"white\"\r\n            }\r\n        });\r\n        var point = new Point({\r\n            latitude: location.getAttribute(\"latitude\"),\r\n            longitude: location.getAttribute(\"longitude\")\r\n        });\r\n        var graphic = new Graphic({\r\n            geometry: point,\r\n            symbol: billboard\r\n        });\r\n        layer.add(graphic);\r\n        if (index < photos.length) {\r\n            index++;\r\n            setImage(index, photos, layer);\r\n        }\r\n    });\r\n}\r\nvar FlickrLayer = /** @class */ (function (_super) {\r\n    __extends(FlickrLayer, _super);\r\n    function FlickrLayer(extent) {\r\n        var _this = _super.call(this, {\r\n            minScale: 70000,\r\n            maxScale: 1000,\r\n            elevationInfo: {\r\n                mode: 'relative-to-scene'\r\n            },\r\n            title: 'Flickr'\r\n        }) || this;\r\n        _this.imagesLoaded = false;\r\n        esriConfig.request.corsEnabledServers.push('https://api.flickr.com/');\r\n        for (var i = 1; i <= 9; i++) {\r\n            esriConfig.request.corsEnabledServers.push(\"https://farm\" + i + \".staticflickr.com/\");\r\n        }\r\n        var url = \"https://api.flickr.com/services/rest/?\\n      method=flickr.photos.search&api_key=d2eeadac35a3dfc3fb64a92e7c792de0&privacy_filter=1&accuracy=16\\n      &has_geo=true\\n      &bbox=\" + extent.xmin + \",\" + extent.ymin + \",\" + extent.xmax + \",\" + extent.ymax + \"\\n      &per_page=250\\n      &license=1,2,3,4,5,6,7,8,9\";\r\n        esriRequest(url, { responseType: 'xml' })\r\n            .then(function (response) {\r\n            _this.photoList = response.data.getElementsByTagName('photo');\r\n        });\r\n        return _this;\r\n    }\r\n    FlickrLayer.prototype.loadImages = function () {\r\n        if (this.imagesLoaded) {\r\n            return;\r\n        }\r\n        else {\r\n            setImage(0, this.photoList, this);\r\n        }\r\n        this.imagesLoaded = true;\r\n    };\r\n    return FlickrLayer;\r\n}(GraphicsLayer));\r\nexports.default = FlickrLayer;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdHMvc2NlbmUvRmxpY2tyTGF5ZXIudHM/MWFjMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSx3Q0FBMEM7QUFDMUMsMENBQTRDO0FBRTVDLDRDQUEyRDtBQUMzRCxvQ0FBNkM7QUFDN0Msc0NBQXdDO0FBRXhDLDRDQUE0RDtBQUM1RCxnREFBb0U7QUFJcEUsa0JBQWtCLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSztJQUNwQyxJQUFJLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDMUIsV0FBVyxDQUFDLG9KQUdDLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFHLEVBQ3JDLEVBQUMsWUFBWSxFQUFFLEtBQUssRUFBQyxDQUFDO1NBQ25CLElBQUksQ0FBQyxVQUFDLFFBQVE7UUFFYixJQUFJLFFBQVEsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWpFLElBQUksTUFBTSxHQUFHLGlCQUFlLEtBQUssQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLDBCQUFxQixLQUFLLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxTQUFJLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQUksS0FBSyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsU0FBTSxDQUFDO1FBRTFLLElBQUksU0FBUyxHQUFHLElBQUksYUFBYSxDQUFDO1lBQ2hDLFlBQVksRUFBRSxDQUFDLElBQUksaUJBQWlCLENBQUM7b0JBQ25DLElBQUksRUFBRSxFQUFFO29CQUNSLFFBQVEsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUU7b0JBQzFCLE9BQU8sRUFBRTt3QkFDUCxLQUFLLEVBQUUsT0FBTzt3QkFDZCxJQUFJLEVBQUUsS0FBSztxQkFDWjtpQkFDRixDQUFDLENBQUM7WUFDSCxjQUFjLEVBQUU7Z0JBQ2QsWUFBWSxFQUFFLEVBQUU7Z0JBQ2hCLGNBQWMsRUFBRSxJQUFJO2dCQUNwQixjQUFjLEVBQUUsRUFBRTthQUNuQjtZQUNELE9BQU8sRUFBRTtnQkFDUCxJQUFJLEVBQUUsTUFBTTtnQkFDWixJQUFJLEVBQUUsQ0FBQztnQkFDUCxLQUFLLEVBQUUsT0FBTzthQUNmO1NBQ0YsQ0FBQyxDQUFDO1FBRUgsSUFBSSxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUM7WUFDcEIsUUFBUSxFQUFFLFFBQVEsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDO1lBQzNDLFNBQVMsRUFBRSxRQUFRLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQztTQUM5QyxDQUFDLENBQUM7UUFFSCxJQUFJLE9BQU8sR0FBRyxJQUFJLE9BQU8sQ0FBQztZQUN4QixRQUFRLEVBQUUsS0FBSztZQUNmLE1BQU0sRUFBRSxTQUFTO1NBQ2xCLENBQUMsQ0FBQztRQUVILEtBQUssQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFbkIsRUFBRSxDQUFDLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQzFCLEtBQUssRUFBRSxDQUFDO1lBQ1IsUUFBUSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDakMsQ0FBQztJQUNILENBQUMsQ0FBQyxDQUFDO0FBQ1QsQ0FBQztBQUVEO0lBQXlDLCtCQUFhO0lBS3BELHFCQUFZLE1BQU07UUFBbEIsWUFDRSxrQkFBTTtZQUNKLFFBQVEsRUFBRSxLQUFLO1lBQ2YsUUFBUSxFQUFFLElBQUk7WUFDZCxhQUFhLEVBQUU7Z0JBQ2IsSUFBSSxFQUFFLG1CQUFtQjthQUMxQjtZQUNELEtBQUssRUFBRSxRQUFRO1NBQ2hCLENBQUMsU0FvQkQ7UUE5Qkgsa0JBQVksR0FBWSxLQUFLLENBQUM7UUFhNUIsVUFBVSxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMseUJBQXlCLENBQUMsQ0FBQztRQUV0RSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQzVCLFVBQVUsQ0FBQyxPQUFPLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLGlCQUFlLENBQUMsdUJBQW9CLENBQUMsQ0FBQztRQUNuRixDQUFDO1FBRUQsSUFBSSxHQUFHLEdBQUcsdUxBR0EsTUFBTSxDQUFDLElBQUksU0FBSSxNQUFNLENBQUMsSUFBSSxTQUFJLE1BQU0sQ0FBQyxJQUFJLFNBQUksTUFBTSxDQUFDLElBQUksNERBRXJDLENBQUM7UUFFOUIsV0FBVyxDQUFDLEdBQUcsRUFBRSxFQUFDLFlBQVksRUFBRSxLQUFLLEVBQUMsQ0FBQzthQUNwQyxJQUFJLENBQUMsVUFBQyxRQUFRO1lBQ2IsS0FBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQy9ELENBQUMsQ0FBQyxDQUFDOztJQUNMLENBQUM7SUFFTSxnQ0FBVSxHQUFqQjtRQUNFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1lBQ3RCLE1BQU0sQ0FBQztRQUNULENBQUM7UUFDRCxJQUFJLENBQUMsQ0FBQztZQUNKLFFBQVEsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNwQyxDQUFDO1FBQ0QsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7SUFDM0IsQ0FBQztJQUNMLGtCQUFDO0FBQUQsQ0FBQyxDQTVDd0MsYUFBYSxHQTRDckQiLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBlc3JpQ29uZmlnIGZyb20gJ2VzcmkvY29uZmlnJztcclxuaW1wb3J0ICogYXMgZXNyaVJlcXVlc3QgZnJvbSAnZXNyaS9yZXF1ZXN0JztcclxuXHJcbmltcG9ydCAqIGFzIEdyYXBoaWNzTGF5ZXIgZnJvbSAnZXNyaS9sYXllcnMvR3JhcGhpY3NMYXllcic7XHJcbmltcG9ydCAqIGFzIFBvaW50IGZyb20gJ2VzcmkvZ2VvbWV0cnkvUG9pbnQnO1xyXG5pbXBvcnQgKiBhcyBHcmFwaGljIGZyb20gJ2VzcmkvR3JhcGhpYyc7XHJcblxyXG5pbXBvcnQgKiBhcyBQb2ludFN5bWJvbDNEIGZyb20gJ2Vzcmkvc3ltYm9scy9Qb2ludFN5bWJvbDNEJztcclxuaW1wb3J0ICogYXMgSWNvblN5bWJvbDNETGF5ZXIgZnJvbSAnZXNyaS9zeW1ib2xzL0ljb25TeW1ib2wzRExheWVyJztcclxuXHJcblxyXG5cclxuZnVuY3Rpb24gc2V0SW1hZ2UoaW5kZXgsIHBob3RvcywgbGF5ZXIpIHtcclxuICB2YXIgcGhvdG8gPSBwaG90b3NbaW5kZXhdO1xyXG4gIGVzcmlSZXF1ZXN0KGBodHRwczovL2FwaS5mbGlja3IuY29tL3NlcnZpY2VzL3Jlc3QvP1xyXG4gICAgbWV0aG9kPWZsaWNrci5waG90b3MuZ2VvLmdldExvY2F0aW9uJlxyXG4gICAgYXBpX2tleT1kMmVlYWRhYzM1YTNkZmMzZmI2NGE5MmU3Yzc5MmRlMCZcclxuICAgIHBob3RvX2lkPSR7cGhvdG8uZ2V0QXR0cmlidXRlKCdpZCcpfWAsXHJcbiAgICB7cmVzcG9uc2VUeXBlOiAneG1sJ30pXHJcbiAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xyXG5cclxuICAgICAgICBsZXQgbG9jYXRpb24gPSByZXNwb25zZS5kYXRhLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdsb2NhdGlvbicpWzBdO1xyXG5cclxuICAgICAgICBsZXQgaW1nVXJsID0gYGh0dHBzOi8vZmFybSR7cGhvdG8uZ2V0QXR0cmlidXRlKCdmYXJtJyl9LnN0YXRpY2ZsaWNrci5jb20vJHtwaG90by5nZXRBdHRyaWJ1dGUoJ3NlcnZlcicpfS8ke3Bob3RvLmdldEF0dHJpYnV0ZSgnaWQnKX1fJHtwaG90by5nZXRBdHRyaWJ1dGUoJ3NlY3JldCcpfS5qcGdgO1xyXG5cclxuICAgICAgICBsZXQgYmlsbGJvYXJkID0gbmV3IFBvaW50U3ltYm9sM0Qoe1xyXG4gICAgICAgICAgc3ltYm9sTGF5ZXJzOiBbbmV3IEljb25TeW1ib2wzRExheWVyKHtcclxuICAgICAgICAgICAgc2l6ZTogNTAsXHJcbiAgICAgICAgICAgIHJlc291cmNlOiB7IGhyZWY6IGltZ1VybCB9LFxyXG4gICAgICAgICAgICBvdXRsaW5lOiB7XHJcbiAgICAgICAgICAgICAgY29sb3I6ICd3aGl0ZScsXHJcbiAgICAgICAgICAgICAgc2l6ZTogJzVweCdcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSldLFxyXG4gICAgICAgICAgdmVydGljYWxPZmZzZXQ6IHtcclxuICAgICAgICAgICAgc2NyZWVuTGVuZ3RoOiA1MCxcclxuICAgICAgICAgICAgbWF4V29ybGRMZW5ndGg6IDMwMDAsXHJcbiAgICAgICAgICAgIG1pbldvcmxkTGVuZ3RoOiAyMFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGNhbGxvdXQ6IHtcclxuICAgICAgICAgICAgdHlwZTogXCJsaW5lXCIsXHJcbiAgICAgICAgICAgIHNpemU6IDIsXHJcbiAgICAgICAgICAgIGNvbG9yOiBcIndoaXRlXCJcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgbGV0IHBvaW50ID0gbmV3IFBvaW50KHtcclxuICAgICAgICAgIGxhdGl0dWRlOiBsb2NhdGlvbi5nZXRBdHRyaWJ1dGUoXCJsYXRpdHVkZVwiKSxcclxuICAgICAgICAgIGxvbmdpdHVkZTogbG9jYXRpb24uZ2V0QXR0cmlidXRlKFwibG9uZ2l0dWRlXCIpXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGxldCBncmFwaGljID0gbmV3IEdyYXBoaWMoe1xyXG4gICAgICAgICAgZ2VvbWV0cnk6IHBvaW50LFxyXG4gICAgICAgICAgc3ltYm9sOiBiaWxsYm9hcmRcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgbGF5ZXIuYWRkKGdyYXBoaWMpO1xyXG5cclxuICAgICAgICBpZiAoaW5kZXggPCBwaG90b3MubGVuZ3RoKSB7XHJcbiAgICAgICAgICBpbmRleCsrO1xyXG4gICAgICAgICAgc2V0SW1hZ2UoaW5kZXgsIHBob3RvcywgbGF5ZXIpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZsaWNrckxheWVyIGV4dGVuZHMgR3JhcGhpY3NMYXllciB7XHJcblxyXG4gIHBob3RvTGlzdDogYW55O1xyXG4gIGltYWdlc0xvYWRlZDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICBjb25zdHJ1Y3RvcihleHRlbnQpIHtcclxuICAgIHN1cGVyKHtcclxuICAgICAgbWluU2NhbGU6IDcwMDAwLFxyXG4gICAgICBtYXhTY2FsZTogMTAwMCxcclxuICAgICAgZWxldmF0aW9uSW5mbzoge1xyXG4gICAgICAgIG1vZGU6ICdyZWxhdGl2ZS10by1zY2VuZSdcclxuICAgICAgfSxcclxuICAgICAgdGl0bGU6ICdGbGlja3InXHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgZXNyaUNvbmZpZy5yZXF1ZXN0LmNvcnNFbmFibGVkU2VydmVycy5wdXNoKCdodHRwczovL2FwaS5mbGlja3IuY29tLycpO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IDk7IGkrKykge1xyXG4gICAgICBlc3JpQ29uZmlnLnJlcXVlc3QuY29yc0VuYWJsZWRTZXJ2ZXJzLnB1c2goYGh0dHBzOi8vZmFybSR7aX0uc3RhdGljZmxpY2tyLmNvbS9gKTtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgdXJsID0gYGh0dHBzOi8vYXBpLmZsaWNrci5jb20vc2VydmljZXMvcmVzdC8/XHJcbiAgICAgIG1ldGhvZD1mbGlja3IucGhvdG9zLnNlYXJjaCZhcGlfa2V5PWQyZWVhZGFjMzVhM2RmYzNmYjY0YTkyZTdjNzkyZGUwJnByaXZhY3lfZmlsdGVyPTEmYWNjdXJhY3k9MTZcclxuICAgICAgJmhhc19nZW89dHJ1ZVxyXG4gICAgICAmYmJveD0ke2V4dGVudC54bWlufSwke2V4dGVudC55bWlufSwke2V4dGVudC54bWF4fSwke2V4dGVudC55bWF4fVxyXG4gICAgICAmcGVyX3BhZ2U9MjUwXHJcbiAgICAgICZsaWNlbnNlPTEsMiwzLDQsNSw2LDcsOCw5YDtcclxuXHJcbiAgICBlc3JpUmVxdWVzdCh1cmwsIHtyZXNwb25zZVR5cGU6ICd4bWwnfSlcclxuICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcbiAgICAgICAgdGhpcy5waG90b0xpc3QgPSByZXNwb25zZS5kYXRhLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdwaG90bycpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgbG9hZEltYWdlcygpIHtcclxuICAgICAgaWYgKHRoaXMuaW1hZ2VzTG9hZGVkKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2Uge1xyXG4gICAgICAgIHNldEltYWdlKDAsIHRoaXMucGhvdG9MaXN0LCB0aGlzKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLmltYWdlc0xvYWRlZCA9IHRydWU7XHJcbiAgICB9XHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3RzL3NjZW5lL0ZsaWNrckxheWVyLnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///33\n");

/***/ }),
/* 34 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_34__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL3JlcXVlc3RcIj8xODFlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjM0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzM0X187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJlc3JpL3JlcXVlc3RcIlxuLy8gbW9kdWxlIGlkID0gMzRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///34\n");

/***/ }),
/* 35 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_35__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL2xheWVycy9HcmFwaGljc0xheWVyXCI/M2M0ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8zNV9fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiZXNyaS9sYXllcnMvR3JhcGhpY3NMYXllclwiXG4vLyBtb2R1bGUgaWQgPSAzNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///35\n");

/***/ }),
/* 36 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_36__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL2dlb21ldHJ5L1BvaW50XCI/NWQ0YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8zNl9fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiZXNyaS9nZW9tZXRyeS9Qb2ludFwiXG4vLyBtb2R1bGUgaWQgPSAzNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///36\n");

/***/ }),
/* 37 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_37__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL0dyYXBoaWNcIj81NDFhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjM3LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzM3X187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJlc3JpL0dyYXBoaWNcIlxuLy8gbW9kdWxlIGlkID0gMzdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///37\n");

/***/ }),
/* 38 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_38__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL3N5bWJvbHMvUG9pbnRTeW1ib2wzRFwiPzJlYjgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMzguanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfMzhfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImVzcmkvc3ltYm9scy9Qb2ludFN5bWJvbDNEXCJcbi8vIG1vZHVsZSBpZCA9IDM4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///38\n");

/***/ }),
/* 39 */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_39__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJlc3JpL3N5bWJvbHMvSWNvblN5bWJvbDNETGF5ZXJcIj8wNmY5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjM5LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzM5X187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJlc3JpL3N5bWJvbHMvSWNvblN5bWJvbDNETGF5ZXJcIlxuLy8gbW9kdWxlIGlkID0gMzlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///39\n");

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar on = __webpack_require__(3);\r\nvar DetailPanel_1 = __webpack_require__(41);\r\nvar SelectionPanel_1 = __webpack_require__(44);\r\nvar BasemapPanel_1 = __webpack_require__(48);\r\nvar WebScene = __webpack_require__(4);\r\n__webpack_require__(50);\r\nvar MenuPanel = /** @class */ (function () {\r\n    function MenuPanel(trails, state) {\r\n        var _this = this;\r\n        this.state = state;\r\n        this.container = document.querySelector('.menuPanel');\r\n        var selectionPanel = new SelectionPanel_1.default(trails, state);\r\n        var detailPanel = new DetailPanel_1.default(trails, state);\r\n        var basemapPanel = new BasemapPanel_1.default(state);\r\n        var panels = {\r\n            selectionPanel: selectionPanel,\r\n            detailPanel: detailPanel,\r\n            basemapPanel: basemapPanel\r\n        };\r\n        this.initVisiblePanel(panels);\r\n        state.watch('visiblePanel', function (newPanel, oldPanel) {\r\n            // activate the selected panel (newPanel)\r\n            document.querySelector(\"[data-tab='\" + newPanel + \"']\").classList.add('active');\r\n            panels[newPanel].container.style.display = 'block';\r\n            // deactivate the old active panel (oldPanel)\r\n            document.querySelector(\"[data-tab='\" + oldPanel + \"']\").classList.remove('active');\r\n            panels[oldPanel].container.style.display = 'none';\r\n        });\r\n        on(document.querySelector('.menuTabs'), 'click', function (evt) {\r\n            _this.state.visiblePanel = evt.target.dataset.tab;\r\n        });\r\n        // this class also takes care of the mobile menu\r\n        on(document.querySelector('#home'), 'click', function (evt) {\r\n            console.log(_this.state.view);\r\n            var view = _this.state.view;\r\n            if (view.map instanceof WebScene) {\r\n                view.goTo(view.map.initialViewProperties.viewpoint);\r\n                _this.state.selectedTrailId = null;\r\n            }\r\n        });\r\n        state.watch('device', function () {\r\n            if (_this.state.device === 'mobilePortrait') {\r\n                _this.state.visiblePanel = 'detailPanel';\r\n                if (!_this.state.selectedTrailId) {\r\n                    _this.container.style.display = 'none';\r\n                }\r\n                else {\r\n                    _this.container.style.display = 'flex';\r\n                }\r\n            }\r\n            else {\r\n                _this.container.style.display = 'flex';\r\n            }\r\n        });\r\n        state.watch('selectedTrailId', function () {\r\n            if (_this.state.device === 'mobilePortrait') {\r\n                if (_this.state.selectedTrailId) {\r\n                    _this.container.style.display = 'flex';\r\n                }\r\n                else {\r\n                    _this.container.style.display = 'none';\r\n                }\r\n            }\r\n        });\r\n        on(document.querySelector('#details'), 'click', function (evt) {\r\n            var displayValue = _this.container.style.display;\r\n            console.log(displayValue);\r\n            _this.container.style.display = (displayValue === 'none' || displayValue === '') ? 'flex' : 'none';\r\n        });\r\n    }\r\n    MenuPanel.prototype.initVisiblePanel = function (panels) {\r\n        if (this.state.device === 'mobilePortrait') {\r\n            this.state.visiblePanel = 'detailPanel';\r\n        }\r\n        else {\r\n            this.state.visiblePanel = 'selectionPanel';\r\n        }\r\n        panels[this.state.visiblePanel].container.style.display = 'block';\r\n    };\r\n    return MenuPanel;\r\n}());\r\nexports.default = MenuPanel;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///40\n");

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dom = __webpack_require__(1);\r\nvar domConstruct = __webpack_require__(2);\r\nvar config_1 = __webpack_require__(0);\r\n__webpack_require__(42);\r\n__webpack_require__(43);\r\nvar SelectionPanel = /** @class */ (function () {\r\n    function SelectionPanel(trails, state) {\r\n        var _this = this;\r\n        this.state = state;\r\n        this.trails = trails;\r\n        this.container = dom.byId('detailPanel');\r\n        this.detailTitle = dom.byId(\"detailTitle\");\r\n        this.detailInfograph = dom.byId(\"detailInfograph\");\r\n        this.detailDescription = dom.byId(\"detailDescription\");\r\n        this.detailElevationProfile = dom.byId('detailElevationProfile');\r\n        this.emptyDetails();\r\n        state.watch('selectedTrailId', function (id) {\r\n            if (id) {\r\n                var selectedTrail = _this.trails.filter(function (trail) { return trail.id === id; })[0];\r\n                _this.displayInfo(selectedTrail);\r\n            }\r\n            else {\r\n                _this.emptyDetails();\r\n            }\r\n        });\r\n        state.watch('device', function () {\r\n            if (!_this.state.selectedTrailId) {\r\n                _this.displayAppInfo();\r\n            }\r\n        });\r\n    }\r\n    SelectionPanel.prototype.emptyDetails = function () {\r\n        domConstruct.empty(this.detailTitle);\r\n        domConstruct.empty(this.detailDescription);\r\n        domConstruct.empty(this.detailInfograph);\r\n        domConstruct.empty(this.detailElevationProfile);\r\n        this.displayAppInfo();\r\n    };\r\n    SelectionPanel.prototype.displayAppInfo = function () {\r\n        if (this.state.device === 'mobilePortrait') {\r\n            this.detailInfograph.innerHTML = 'This app shows the hikes in the Swiss National Park. Select a hike on the map to find out more about it.';\r\n        }\r\n        else {\r\n            this.detailInfograph.innerHTML = 'Select a hike in the map or in the Hikes panel to see more details about it.';\r\n        }\r\n    };\r\n    SelectionPanel.prototype.displayInfo = function (trail) {\r\n        // create title\r\n        this.detailTitle.innerHTML = trail.name;\r\n        // create infograph\r\n        this.createInfograph(trail);\r\n        // create the description container\r\n        this.detailDescription.innerHTML = trail.description;\r\n        // create the elevation profile\r\n        this.createChart(trail.profileData);\r\n    };\r\n    SelectionPanel.prototype.createInfograph = function (trail) {\r\n        var status = [{\r\n                icon: 'fa fa-calendar-times-o',\r\n                text: 'Closed'\r\n            }, {\r\n                icon: 'fa fa-calendar-check-o',\r\n                text: 'Open'\r\n            }];\r\n        this.detailInfograph.innerHTML = \"\\n      <span class='infograph'><span class='fa fa-line-chart' aria-hidden='true'></span> \" + trail.ascent + \" m</span>\\n      <span class='infograph'><span class='fa fa-wrench' aria-hidden='true'></span> \" + trail.difficulty + \"</span>\\n      <span class='infograph'><span class='fa fa-clock-o' aria-hidden='true'></span> \" + trail.walktime + \" hr</span>\\n      <span class='infograph'><span class='\" + status[trail.status].icon + \"' aria-hidden='true'></span> \" + status[trail.status].text + \"</span>\\n    \";\r\n    };\r\n    SelectionPanel.prototype.createChart = function (data) {\r\n        var chart = AmCharts.makeChart(this.detailElevationProfile, {\r\n            type: 'serial',\r\n            theme: 'light',\r\n            dataProvider: data,\r\n            color: '#4b4b4b',\r\n            fontFamily: 'Open Sans Condensed',\r\n            balloon: {\r\n                borderAlpha: 0,\r\n                fillAlpha: 0.8,\r\n                fillColor: config_1.default.colors.selectedTrail,\r\n                shadowAlpha: 0\r\n            },\r\n            graphs: [{\r\n                    id: \"g1\",\r\n                    balloonText: \"Distance: <b>[[category]] km</b><br>Elevation:<b>[[value]] m</b>\",\r\n                    fillAlphas: 0.2,\r\n                    bulletAlpha: 0,\r\n                    lineColor: config_1.default.colors.selectedTrail,\r\n                    lineThickness: 1,\r\n                    valueField: \"value\"\r\n                }],\r\n            chartCursor: {\r\n                limitToGraph: \"g1\",\r\n                categoryBalloonEnabled: false,\r\n                zoomable: false\r\n            },\r\n            categoryField: \"length\",\r\n            categoryAxis: {\r\n                gridThickness: 0,\r\n                axisThickness: 0.1,\r\n            },\r\n            valueAxes: [{\r\n                    strictMinMax: true,\r\n                    autoGridCount: false,\r\n                    minimum: 1000,\r\n                    maximum: 3500,\r\n                    axisThickness: 0,\r\n                    tickLength: 0,\r\n                }]\r\n        });\r\n        var popup = this.state.view.popup;\r\n        chart.addListener('changed', function (e) {\r\n            if (e.index) {\r\n                var data = e.chart.dataProvider[e.index];\r\n                popup.dockEnabled = false;\r\n                popup.open({\r\n                    title: data.value + \" m\",\r\n                    location: {\r\n                        spatialReference: { wkid: 4326 },\r\n                        longitude: data.point[0],\r\n                        latitude: data.point[1],\r\n                        z: data.point[2],\r\n                        type: 'point'\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                popup.close();\r\n            }\r\n        });\r\n    };\r\n    return SelectionPanel;\r\n}());\r\nexports.default = SelectionPanel;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///41\n");

/***/ }),
/* 42 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUvZGV0YWlsLXBhbmVsLnNjc3M/NDAxZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI0Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvc3R5bGUvZGV0YWlsLXBhbmVsLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDQyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///42\n");

/***/ }),
/* 43 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZm9udC1hd2Vzb21lL3Njc3MvZm9udC1hd2Vzb21lLnNjc3M/MzNlMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI0My5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZm9udC1hd2Vzb21lL3Njc3MvZm9udC1hd2Vzb21lLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDQzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///43\n");

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dom = __webpack_require__(1);\r\nvar on = __webpack_require__(3);\r\nvar domConstruct = __webpack_require__(2);\r\nvar config_1 = __webpack_require__(0);\r\nvar noUiSlider = __webpack_require__(45);\r\n__webpack_require__(46);\r\n__webpack_require__(47);\r\nvar SelectionPanel = /** @class */ (function () {\r\n    function SelectionPanel(trails, state) {\r\n        var _this = this;\r\n        this.state = state;\r\n        this.trails = trails;\r\n        this.container = dom.byId('selectionPanel');\r\n        this.trailsPanel = dom.byId('trailsPanel');\r\n        this.generateTrailsPanel();\r\n        on(document.querySelector('.removeSelected'), 'click', function (evt) {\r\n            _this.state.setSelectedTrailId(null);\r\n        });\r\n        this.filterPanel = dom.byId('filterPanel');\r\n        this.generateFilterPanel();\r\n        state.watch('selectedTrailId', function (id) {\r\n            if (document.querySelector(\".selected\")) {\r\n                document.querySelector(\".selected\").classList.remove(\"selected\");\r\n            }\r\n            if (id) {\r\n                document.querySelector(\"[data-id ='\" + id + \"']\").classList.add(\"selected\");\r\n                document.querySelector('.removeSelected').removeAttribute('disabled');\r\n            }\r\n            else {\r\n                document.querySelector('.removeSelected').setAttribute('disabled', '');\r\n            }\r\n        });\r\n        state.watch('filters', function (filters) {\r\n            var filteredTrailIds = _this.getFilteredTrails(filters)\r\n                .map(function (trail) { return trail.id; });\r\n            _this.state.setFilteredTrailIds(filteredTrailIds);\r\n        });\r\n        state.watch('filteredTrailIds', function (ids) {\r\n            _this.updateVisibleTrails(ids);\r\n        });\r\n    }\r\n    SelectionPanel.prototype.getFilteredTrails = function (filters) {\r\n        var filteredTrails = this.trails.filter(function (trail) {\r\n            // we assume the trail will not be filtered out\r\n            var keepTrail = true;\r\n            // go through each filter criteria and verify if the trail should be filtered out\r\n            for (var filter in filters) {\r\n                if (Array.isArray(filters[filter])) {\r\n                    if (trail[filter] < filters[filter][0] || trail[filter] > filters[filter][1]) {\r\n                        keepTrail = false;\r\n                        break;\r\n                    }\r\n                }\r\n                else {\r\n                    if (filters[filter] !== 'All') {\r\n                        if (trail[filter] !== filters[filter]) {\r\n                            keepTrail = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return keepTrail;\r\n        });\r\n        return filteredTrails;\r\n    };\r\n    SelectionPanel.prototype.updateVisibleTrails = function (ids) {\r\n        var trailElements = document.querySelectorAll(\".trail\");\r\n        [].forEach.call(trailElements, function (elem) {\r\n            if (ids.indexOf(parseInt(elem.dataset.id)) === -1) {\r\n                elem.classList.add(\"disabled\");\r\n            }\r\n            else {\r\n                elem.classList.remove(\"disabled\");\r\n            }\r\n        });\r\n    };\r\n    SelectionPanel.prototype.generateTrailsPanel = function () {\r\n        var _this = this;\r\n        var state = this.state;\r\n        this.trails.forEach(function (trail) {\r\n            var trailElement = domConstruct.create('div', {\r\n                'innerHTML': trail.name,\r\n                'data-difficulty': trail.difficulty,\r\n                'data-id': trail.id,\r\n                'data-category': trail.category,\r\n                'data-walktime': trail.walktime,\r\n                'data-status': trail.status,\r\n                'data-ascent': trail.ascent,\r\n                'class': 'trail'\r\n            }, _this.trailsPanel);\r\n            on(trailElement, 'click', function (evt) {\r\n                state.setSelectedTrailId(parseInt(evt.target.dataset.id));\r\n            });\r\n        });\r\n    };\r\n    SelectionPanel.prototype.generateFilterPanel = function () {\r\n        this.generateSingleChoiceFilters();\r\n        this.generateRangeFilters();\r\n    };\r\n    // create radio buttons for single choice filter criteria\r\n    SelectionPanel.prototype.generateSingleChoiceFilters = function () {\r\n        var _this = this;\r\n        var singleChoiceFilters = config_1.default.data.filterOptions.singleChoice;\r\n        for (var _i = 0, singleChoiceFilters_1 = singleChoiceFilters; _i < singleChoiceFilters_1.length; _i++) {\r\n            var filter = singleChoiceFilters_1[_i];\r\n            // get unique values for the single choice options\r\n            var uniqueValues = this.getUniqueValues(filter);\r\n            // create a single choice options text so that users know what to select\r\n            var text = filter.charAt(0).toUpperCase() + filter.slice(1);\r\n            domConstruct.create(\"div\", {\r\n                innerHTML: text,\r\n                class: 'filter-category'\r\n            }, this.filterPanel);\r\n            // add options as radio buttons\r\n            var spanContainer = domConstruct.create(\"span\", {\r\n                \"class\": \"radio-group\"\r\n            }, this.filterPanel);\r\n            for (var i = 0; i < uniqueValues.length; i++) {\r\n                var checked = (i === 0) ? 'checked' : '';\r\n                var id = filter + \"-\" + uniqueValues[i];\r\n                var radioOption = \"<input type='radio' id='\" + id + \"' name=\" + filter + \" \" + checked + \"/>\\n        <label for='\" + id + \"' data-group='\" + filter + \"' data-option='\" + uniqueValues[i] + \"'>\" + uniqueValues[i] + \"</label>\";\r\n                spanContainer.innerHTML += radioOption;\r\n            }\r\n            // initialize state\r\n            this.state.setFilter(filter, 'All');\r\n            on(spanContainer, \"click\", function (evt) {\r\n                var target = evt.target;\r\n                if (target.localName === 'label') {\r\n                    _this.state.setFilter(target.dataset.group, target.dataset.option);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    // function that gets unique values for a trail attribute (filter)\r\n    SelectionPanel.prototype.getUniqueValues = function (filter) {\r\n        var uniqueValues = ['All'];\r\n        this.trails.forEach(function (elem) {\r\n            if (uniqueValues.indexOf(elem[filter]) === -1) {\r\n                uniqueValues.push(elem[filter]);\r\n            }\r\n        });\r\n        return uniqueValues;\r\n    };\r\n    // creates range sliders for interval type filter criteria\r\n    SelectionPanel.prototype.generateRangeFilters = function () {\r\n        var rangeFilters = config_1.default.data.filterOptions.range;\r\n        var state = this.state;\r\n        var _loop_1 = function (filter) {\r\n            var text = filter.charAt(0).toUpperCase() + filter.slice(1);\r\n            domConstruct.create(\"div\", {\r\n                innerHTML: text,\r\n                class: 'filter-category'\r\n            }, this_1.filterPanel);\r\n            // get minimum and maximum for the filter criteria\r\n            var extremes = this_1.getExtremes(filter);\r\n            var unit = '', step = 1;\r\n            switch (filter) {\r\n                case 'walktime': {\r\n                    unit = 'hrs';\r\n                    step = 1;\r\n                    break;\r\n                }\r\n                case 'ascent': {\r\n                    unit = 'm';\r\n                    step = 50;\r\n                    break;\r\n                }\r\n            }\r\n            domConstruct.create('span', {\r\n                innerHTML: extremes.min + ' ' + unit\r\n            }, this_1.filterPanel);\r\n            var rangeSliderContainer = domConstruct.create('div', {\r\n                'class': 'range-slider',\r\n                'data-group': filter\r\n            }, this_1.filterPanel);\r\n            var format = {\r\n                to: function (value) {\r\n                    return parseInt(value) + \" \" + unit;\r\n                },\r\n                from: function (value) {\r\n                    return parseInt(value) + \" \" + unit;\r\n                }\r\n            };\r\n            noUiSlider.create(rangeSliderContainer, {\r\n                start: [extremes.min, extremes.max],\r\n                range: {\r\n                    min: extremes.min,\r\n                    max: extremes.max\r\n                },\r\n                connect: true,\r\n                step: step,\r\n                tooltips: [format, format]\r\n            });\r\n            //initialize state\r\n            state.setFilter(filter, [extremes.min, extremes.max]);\r\n            //add event listener on slider to change the state when slider values change\r\n            rangeSliderContainer.noUiSlider.on('end', function (values) {\r\n                state.setFilter(this.target.dataset.group, values);\r\n            });\r\n            domConstruct.create('span', {\r\n                innerHTML: extremes.max + ' ' + unit\r\n            }, this_1.filterPanel);\r\n        };\r\n        var this_1 = this;\r\n        for (var _i = 0, rangeFilters_1 = rangeFilters; _i < rangeFilters_1.length; _i++) {\r\n            var filter = rangeFilters_1[_i];\r\n            _loop_1(filter);\r\n        }\r\n    };\r\n    SelectionPanel.prototype.getExtremes = function (prop) {\r\n        var min = 1000, max = 0;\r\n        this.trails.forEach(function (elem) {\r\n            if (elem[prop] !== null) {\r\n                if (elem[prop] < min) {\r\n                    min = elem[prop];\r\n                }\r\n                if (elem[prop] > max) {\r\n                    max = elem[prop];\r\n                }\r\n            }\r\n        });\r\n        return {\r\n            min: min,\r\n            max: max\r\n        };\r\n    };\r\n    return SelectionPanel;\r\n}());\r\nexports.default = SelectionPanel;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///44\n");

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! nouislider - 11.0.0 - 2018-01-12 20:37:52 */\n\n(function (factory) {\n\n    if ( true ) {\n\n        // AMD. Register as an anonymous module.\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n    } else if ( typeof exports === 'object' ) {\n\n        // Node/CommonJS\n        module.exports = factory();\n\n    } else {\n\n        // Browser globals\n        window.noUiSlider = factory();\n    }\n\n}(function( ){\n\n\t'use strict';\n\n\tvar VERSION = '11.0.0';\n\n\n\tfunction isValidFormatter ( entry ) {\n\t\treturn typeof entry === 'object' && typeof entry.to === 'function' && typeof entry.from === 'function';\n\t}\n\n\tfunction removeElement ( el ) {\n\t\tel.parentElement.removeChild(el);\n\t}\n\n\t// Bindable version\n\tfunction preventDefault ( e ) {\n\t\te.preventDefault();\n\t}\n\n\t// Removes duplicates from an array.\n\tfunction unique ( array ) {\n\t\treturn array.filter(function(a){\n\t\t\treturn !this[a] ? this[a] = true : false;\n\t\t}, {});\n\t}\n\n\t// Round a value to the closest 'to'.\n\tfunction closest ( value, to ) {\n\t\treturn Math.round(value / to) * to;\n\t}\n\n\t// Current position of an element relative to the document.\n\tfunction offset ( elem, orientation ) {\n\n\t\tvar rect = elem.getBoundingClientRect();\n\t\tvar doc = elem.ownerDocument;\n\t\tvar docElem = doc.documentElement;\n\t\tvar pageOffset = getPageOffset(doc);\n\n\t\t// getBoundingClientRect contains left scroll in Chrome on Android.\n\t\t// I haven't found a feature detection that proves this. Worst case\n\t\t// scenario on mis-match: the 'tap' feature on horizontal sliders breaks.\n\t\tif ( /webkit.*Chrome.*Mobile/i.test(navigator.userAgent) ) {\n\t\t\tpageOffset.x = 0;\n\t\t}\n\n\t\treturn orientation ? (rect.top + pageOffset.y - docElem.clientTop) : (rect.left + pageOffset.x - docElem.clientLeft);\n\t}\n\n\t// Checks whether a value is numerical.\n\tfunction isNumeric ( a ) {\n\t\treturn typeof a === 'number' && !isNaN( a ) && isFinite( a );\n\t}\n\n\t// Sets a class and removes it after [duration] ms.\n\tfunction addClassFor ( element, className, duration ) {\n\t\tif (duration > 0) {\n\t\taddClass(element, className);\n\t\t\tsetTimeout(function(){\n\t\t\t\tremoveClass(element, className);\n\t\t\t}, duration);\n\t\t}\n\t}\n\n\t// Limits a value to 0 - 100\n\tfunction limit ( a ) {\n\t\treturn Math.max(Math.min(a, 100), 0);\n\t}\n\n\t// Wraps a variable as an array, if it isn't one yet.\n\t// Note that an input array is returned by reference!\n\tfunction asArray ( a ) {\n\t\treturn Array.isArray(a) ? a : [a];\n\t}\n\n\t// Counts decimals\n\tfunction countDecimals ( numStr ) {\n\t\tnumStr = String(numStr);\n\t\tvar pieces = numStr.split(\".\");\n\t\treturn pieces.length > 1 ? pieces[1].length : 0;\n\t}\n\n\t// http://youmightnotneedjquery.com/#add_class\n\tfunction addClass ( el, className ) {\n\t\tif ( el.classList ) {\n\t\t\tel.classList.add(className);\n\t\t} else {\n\t\t\tel.className += ' ' + className;\n\t\t}\n\t}\n\n\t// http://youmightnotneedjquery.com/#remove_class\n\tfunction removeClass ( el, className ) {\n\t\tif ( el.classList ) {\n\t\t\tel.classList.remove(className);\n\t\t} else {\n\t\t\tel.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n\t\t}\n\t}\n\n\t// https://plainjs.com/javascript/attributes/adding-removing-and-testing-for-classes-9/\n\tfunction hasClass ( el, className ) {\n\t\treturn el.classList ? el.classList.contains(className) : new RegExp('\\\\b' + className + '\\\\b').test(el.className);\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY#Notes\n\tfunction getPageOffset ( doc ) {\n\n\t\tvar supportPageOffset = window.pageXOffset !== undefined;\n\t\tvar isCSS1Compat = ((doc.compatMode || \"\") === \"CSS1Compat\");\n\t\tvar x = supportPageOffset ? window.pageXOffset : isCSS1Compat ? doc.documentElement.scrollLeft : doc.body.scrollLeft;\n\t\tvar y = supportPageOffset ? window.pageYOffset : isCSS1Compat ? doc.documentElement.scrollTop : doc.body.scrollTop;\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\t// we provide a function to compute constants instead\n\t// of accessing window.* as soon as the module needs it\n\t// so that we do not compute anything if not needed\n\tfunction getActions ( ) {\n\n\t\t// Determine the events to bind. IE11 implements pointerEvents without\n\t\t// a prefix, which breaks compatibility with the IE10 implementation.\n\t\treturn window.navigator.pointerEnabled ? {\n\t\t\tstart: 'pointerdown',\n\t\t\tmove: 'pointermove',\n\t\t\tend: 'pointerup'\n\t\t} : window.navigator.msPointerEnabled ? {\n\t\t\tstart: 'MSPointerDown',\n\t\t\tmove: 'MSPointerMove',\n\t\t\tend: 'MSPointerUp'\n\t\t} : {\n\t\t\tstart: 'mousedown touchstart',\n\t\t\tmove: 'mousemove touchmove',\n\t\t\tend: 'mouseup touchend'\n\t\t};\n\t}\n\n\t// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n\t// Issue #785\n\tfunction getSupportsPassive ( ) {\n\n\t\tvar supportsPassive = false;\n\n\t\ttry {\n\n\t\t\tvar opts = Object.defineProperty({}, 'passive', {\n\t\t\t\tget: function() {\n\t\t\t\t\tsupportsPassive = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\twindow.addEventListener('test', null, opts);\n\n\t\t} catch (e) {}\n\n\t\treturn supportsPassive;\n\t}\n\n\tfunction getSupportsTouchActionNone ( ) {\n\t\treturn window.CSS && CSS.supports && CSS.supports('touch-action', 'none');\n\t}\n\n\n// Value calculation\n\n\t// Determine the size of a sub-range in relation to a full range.\n\tfunction subRangeRatio ( pa, pb ) {\n\t\treturn (100 / (pb - pa));\n\t}\n\n\t// (percentage) How many percent is this value of this range?\n\tfunction fromPercentage ( range, value ) {\n\t\treturn (value * 100) / ( range[1] - range[0] );\n\t}\n\n\t// (percentage) Where is this value on this range?\n\tfunction toPercentage ( range, value ) {\n\t\treturn fromPercentage( range, range[0] < 0 ?\n\t\t\tvalue + Math.abs(range[0]) :\n\t\t\t\tvalue - range[0] );\n\t}\n\n\t// (value) How much is this percentage on this range?\n\tfunction isPercentage ( range, value ) {\n\t\treturn ((value * ( range[1] - range[0] )) / 100) + range[0];\n\t}\n\n\n// Range conversion\n\n\tfunction getJ ( value, arr ) {\n\n\t\tvar j = 1;\n\n\t\twhile ( value >= arr[j] ){\n\t\t\tj += 1;\n\t\t}\n\n\t\treturn j;\n\t}\n\n\t// (percentage) Input a value, find where, on a scale of 0-100, it applies.\n\tfunction toStepping ( xVal, xPct, value ) {\n\n\t\tif ( value >= xVal.slice(-1)[0] ){\n\t\t\treturn 100;\n\t\t}\n\n\t\tvar j = getJ( value, xVal ), va, vb, pa, pb;\n\n\t\tva = xVal[j-1];\n\t\tvb = xVal[j];\n\t\tpa = xPct[j-1];\n\t\tpb = xPct[j];\n\n\t\treturn pa + (toPercentage([va, vb], value) / subRangeRatio (pa, pb));\n\t}\n\n\t// (value) Input a percentage, find where it is on the specified range.\n\tfunction fromStepping ( xVal, xPct, value ) {\n\n\t\t// There is no range group that fits 100\n\t\tif ( value >= 100 ){\n\t\t\treturn xVal.slice(-1)[0];\n\t\t}\n\n\t\tvar j = getJ( value, xPct ), va, vb, pa, pb;\n\n\t\tva = xVal[j-1];\n\t\tvb = xVal[j];\n\t\tpa = xPct[j-1];\n\t\tpb = xPct[j];\n\n\t\treturn isPercentage([va, vb], (value - pa) * subRangeRatio (pa, pb));\n\t}\n\n\t// (percentage) Get the step that applies at a certain value.\n\tfunction getStep ( xPct, xSteps, snap, value ) {\n\n\t\tif ( value === 100 ) {\n\t\t\treturn value;\n\t\t}\n\n\t\tvar j = getJ( value, xPct ), a, b;\n\n\t\t// If 'snap' is set, steps are used as fixed points on the slider.\n\t\tif ( snap ) {\n\n\t\t\ta = xPct[j-1];\n\t\t\tb = xPct[j];\n\n\t\t\t// Find the closest position, a or b.\n\t\t\tif ((value - a) > ((b-a)/2)){\n\t\t\t\treturn b;\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}\n\n\t\tif ( !xSteps[j-1] ){\n\t\t\treturn value;\n\t\t}\n\n\t\treturn xPct[j-1] + closest(\n\t\t\tvalue - xPct[j-1],\n\t\t\txSteps[j-1]\n\t\t);\n\t}\n\n\n// Entry parsing\n\n\tfunction handleEntryPoint ( index, value, that ) {\n\n\t\tvar percentage;\n\n\t\t// Wrap numerical input in an array.\n\t\tif ( typeof value === \"number\" ) {\n\t\t\tvalue = [value];\n\t\t}\n\n\t\t// Reject any invalid input, by testing whether value is an array.\n\t\tif ( !Array.isArray(value) ){\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'range' contains invalid value.\");\n\t\t}\n\n\t\t// Covert min/max syntax to 0 and 100.\n\t\tif ( index === 'min' ) {\n\t\t\tpercentage = 0;\n\t\t} else if ( index === 'max' ) {\n\t\t\tpercentage = 100;\n\t\t} else {\n\t\t\tpercentage = parseFloat( index );\n\t\t}\n\n\t\t// Check for correct input.\n\t\tif ( !isNumeric( percentage ) || !isNumeric( value[0] ) ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'range' value isn't numeric.\");\n\t\t}\n\n\t\t// Store values.\n\t\tthat.xPct.push( percentage );\n\t\tthat.xVal.push( value[0] );\n\n\t\t// NaN will evaluate to false too, but to keep\n\t\t// logging clear, set step explicitly. Make sure\n\t\t// not to override the 'step' setting with false.\n\t\tif ( !percentage ) {\n\t\t\tif ( !isNaN( value[1] ) ) {\n\t\t\t\tthat.xSteps[0] = value[1];\n\t\t\t}\n\t\t} else {\n\t\t\tthat.xSteps.push( isNaN(value[1]) ? false : value[1] );\n\t\t}\n\n\t\tthat.xHighestCompleteStep.push(0);\n\t}\n\n\tfunction handleStepPoint ( i, n, that ) {\n\n\t\t// Ignore 'false' stepping.\n\t\tif ( !n ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Factor to range ratio\n\t\tthat.xSteps[i] = fromPercentage([\n\t\t\t that.xVal[i]\n\t\t\t,that.xVal[i+1]\n\t\t], n) / subRangeRatio (\n\t\t\tthat.xPct[i],\n\t\t\tthat.xPct[i+1] );\n\n\t\tvar totalSteps = (that.xVal[i+1] - that.xVal[i]) / that.xNumSteps[i];\n\t\tvar highestStep = Math.ceil(Number(totalSteps.toFixed(3)) - 1);\n\t\tvar step = that.xVal[i] + (that.xNumSteps[i] * highestStep);\n\n\t\tthat.xHighestCompleteStep[i] = step;\n\t}\n\n\n// Interface\n\n\tfunction Spectrum ( entry, snap, singleStep ) {\n\n\t\tthis.xPct = [];\n\t\tthis.xVal = [];\n\t\tthis.xSteps = [ singleStep || false ];\n\t\tthis.xNumSteps = [ false ];\n\t\tthis.xHighestCompleteStep = [];\n\n\t\tthis.snap = snap;\n\n\t\tvar index, ordered = [ /* [0, 'min'], [1, '50%'], [2, 'max'] */ ];\n\n\t\t// Map the object keys to an array.\n\t\tfor ( index in entry ) {\n\t\t\tif ( entry.hasOwnProperty(index) ) {\n\t\t\t\tordered.push([entry[index], index]);\n\t\t\t}\n\t\t}\n\n\t\t// Sort all entries by value (numeric sort).\n\t\tif ( ordered.length && typeof ordered[0][0] === \"object\" ) {\n\t\t\tordered.sort(function(a, b) { return a[0][0] - b[0][0]; });\n\t\t} else {\n\t\t\tordered.sort(function(a, b) { return a[0] - b[0]; });\n\t\t}\n\n\n\t\t// Convert all entries to subranges.\n\t\tfor ( index = 0; index < ordered.length; index++ ) {\n\t\t\thandleEntryPoint(ordered[index][1], ordered[index][0], this);\n\t\t}\n\n\t\t// Store the actual step values.\n\t\t// xSteps is sorted in the same order as xPct and xVal.\n\t\tthis.xNumSteps = this.xSteps.slice(0);\n\n\t\t// Convert all numeric steps to the percentage of the subrange they represent.\n\t\tfor ( index = 0; index < this.xNumSteps.length; index++ ) {\n\t\t\thandleStepPoint(index, this.xNumSteps[index], this);\n\t\t}\n\t}\n\n\tSpectrum.prototype.getMargin = function ( value ) {\n\n\t\tvar step = this.xNumSteps[0];\n\n\t\tif ( step && ((value / step) % 1) !== 0 ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'limit', 'margin' and 'padding' must be divisible by step.\");\n\t\t}\n\n\t\treturn this.xPct.length === 2 ? fromPercentage(this.xVal, value) : false;\n\t};\n\n\tSpectrum.prototype.toStepping = function ( value ) {\n\n\t\tvalue = toStepping( this.xVal, this.xPct, value );\n\n\t\treturn value;\n\t};\n\n\tSpectrum.prototype.fromStepping = function ( value ) {\n\n\t\treturn fromStepping( this.xVal, this.xPct, value );\n\t};\n\n\tSpectrum.prototype.getStep = function ( value ) {\n\n\t\tvalue = getStep(this.xPct, this.xSteps, this.snap, value );\n\n\t\treturn value;\n\t};\n\n\tSpectrum.prototype.getNearbySteps = function ( value ) {\n\n\t\tvar j = getJ(value, this.xPct);\n\n\t\treturn {\n\t\t\tstepBefore: { startValue: this.xVal[j-2], step: this.xNumSteps[j-2], highestStep: this.xHighestCompleteStep[j-2] },\n\t\t\tthisStep: { startValue: this.xVal[j-1], step: this.xNumSteps[j-1], highestStep: this.xHighestCompleteStep[j-1] },\n\t\t\tstepAfter: { startValue: this.xVal[j-0], step: this.xNumSteps[j-0], highestStep: this.xHighestCompleteStep[j-0] }\n\t\t};\n\t};\n\n\tSpectrum.prototype.countStepDecimals = function () {\n\t\tvar stepDecimals = this.xNumSteps.map(countDecimals);\n\t\treturn Math.max.apply(null, stepDecimals);\n \t};\n\n\t// Outside testing\n\tSpectrum.prototype.convert = function ( value ) {\n\t\treturn this.getStep(this.toStepping(value));\n\t};\n\n/*\tEvery input option is tested and parsed. This'll prevent\n\tendless validation in internal methods. These tests are\n\tstructured with an item for every option available. An\n\toption can be marked as required by setting the 'r' flag.\n\tThe testing function is provided with three arguments:\n\t\t- The provided value for the option;\n\t\t- A reference to the options object;\n\t\t- The name for the option;\n\n\tThe testing function returns false when an error is detected,\n\tor true when everything is OK. It can also modify the option\n\tobject, to make sure all values can be correctly looped elsewhere. */\n\n\tvar defaultFormatter = { 'to': function( value ){\n\t\treturn value !== undefined && value.toFixed(2);\n\t}, 'from': Number };\n\n\tfunction validateFormat ( entry ) {\n\n\t\t// Any object with a to and from method is supported.\n\t\tif ( isValidFormatter(entry) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'format' requires 'to' and 'from' methods.\");\n\t}\n\n\tfunction testStep ( parsed, entry ) {\n\n\t\tif ( !isNumeric( entry ) ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'step' is not numeric.\");\n\t\t}\n\n\t\t// The step option can still be used to set stepping\n\t\t// for linear sliders. Overwritten if set in 'range'.\n\t\tparsed.singleStep = entry;\n\t}\n\n\tfunction testRange ( parsed, entry ) {\n\n\t\t// Filter incorrect input.\n\t\tif ( typeof entry !== 'object' || Array.isArray(entry) ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'range' is not an object.\");\n\t\t}\n\n\t\t// Catch missing start or end.\n\t\tif ( entry.min === undefined || entry.max === undefined ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): Missing 'min' or 'max' in 'range'.\");\n\t\t}\n\n\t\t// Catch equal start or end.\n\t\tif ( entry.min === entry.max ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'range' 'min' and 'max' cannot be equal.\");\n\t\t}\n\n\t\tparsed.spectrum = new Spectrum(entry, parsed.snap, parsed.singleStep);\n\t}\n\n\tfunction testStart ( parsed, entry ) {\n\n\t\tentry = asArray(entry);\n\n\t\t// Validate input. Values aren't tested, as the public .val method\n\t\t// will always provide a valid location.\n\t\tif ( !Array.isArray( entry ) || !entry.length ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'start' option is incorrect.\");\n\t\t}\n\n\t\t// Store the number of handles.\n\t\tparsed.handles = entry.length;\n\n\t\t// When the slider is initialized, the .val method will\n\t\t// be called with the start options.\n\t\tparsed.start = entry;\n\t}\n\n\tfunction testSnap ( parsed, entry ) {\n\n\t\t// Enforce 100% stepping within subranges.\n\t\tparsed.snap = entry;\n\n\t\tif ( typeof entry !== 'boolean' ){\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'snap' option must be a boolean.\");\n\t\t}\n\t}\n\n\tfunction testAnimate ( parsed, entry ) {\n\n\t\t// Enforce 100% stepping within subranges.\n\t\tparsed.animate = entry;\n\n\t\tif ( typeof entry !== 'boolean' ){\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'animate' option must be a boolean.\");\n\t\t}\n\t}\n\n\tfunction testAnimationDuration ( parsed, entry ) {\n\n\t\tparsed.animationDuration = entry;\n\n\t\tif ( typeof entry !== 'number' ){\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'animationDuration' option must be a number.\");\n\t\t}\n\t}\n\n\tfunction testConnect ( parsed, entry ) {\n\n\t\tvar connect = [false];\n\t\tvar i;\n\n\t\t// Map legacy options\n\t\tif ( entry === 'lower' ) {\n\t\t\tentry = [true, false];\n\t\t}\n\n\t\telse if ( entry === 'upper' ) {\n\t\t\tentry = [false, true];\n\t\t}\n\n\t\t// Handle boolean options\n\t\tif ( entry === true || entry === false ) {\n\n\t\t\tfor ( i = 1; i < parsed.handles; i++ ) {\n\t\t\t\tconnect.push(entry);\n\t\t\t}\n\n\t\t\tconnect.push(false);\n\t\t}\n\n\t\t// Reject invalid input\n\t\telse if ( !Array.isArray( entry ) || !entry.length || entry.length !== parsed.handles + 1 ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'connect' option doesn't match handle count.\");\n\t\t}\n\n\t\telse {\n\t\t\tconnect = entry;\n\t\t}\n\n\t\tparsed.connect = connect;\n\t}\n\n\tfunction testOrientation ( parsed, entry ) {\n\n\t\t// Set orientation to an a numerical value for easy\n\t\t// array selection.\n\t\tswitch ( entry ){\n\t\t  case 'horizontal':\n\t\t\tparsed.ort = 0;\n\t\t\tbreak;\n\t\t  case 'vertical':\n\t\t\tparsed.ort = 1;\n\t\t\tbreak;\n\t\t  default:\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'orientation' option is invalid.\");\n\t\t}\n\t}\n\n\tfunction testMargin ( parsed, entry ) {\n\n\t\tif ( !isNumeric(entry) ){\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'margin' option must be numeric.\");\n\t\t}\n\n\t\t// Issue #582\n\t\tif ( entry === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tparsed.margin = parsed.spectrum.getMargin(entry);\n\n\t\tif ( !parsed.margin ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'margin' option is only supported on linear sliders.\");\n\t\t}\n\t}\n\n\tfunction testLimit ( parsed, entry ) {\n\n\t\tif ( !isNumeric(entry) ){\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'limit' option must be numeric.\");\n\t\t}\n\n\t\tparsed.limit = parsed.spectrum.getMargin(entry);\n\n\t\tif ( !parsed.limit || parsed.handles < 2 ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'limit' option is only supported on linear sliders with 2 or more handles.\");\n\t\t}\n\t}\n\n\tfunction testPadding ( parsed, entry ) {\n\n\t\tif ( !isNumeric(entry) && !Array.isArray(entry) ){\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'padding' option must be numeric or array of exactly 2 numbers.\");\n\t\t}\n\n\t\tif ( Array.isArray(entry) && !(entry.length == 2 || isNumeric(entry[0]) || isNumeric(entry[1])) ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'padding' option must be numeric or array of exactly 2 numbers.\");\n\t\t}\n\n\t\tif ( entry === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !Array.isArray(entry) ) {\n\t\t\tentry = [entry, entry];\n\t\t}\n\n\t\t// 'getMargin' returns false for invalid values.\n\t\tparsed.padding = [parsed.spectrum.getMargin(entry[0]), parsed.spectrum.getMargin(entry[1])];\n\n\t\tif ( parsed.padding[0] === false || parsed.padding[1] === false ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'padding' option is only supported on linear sliders.\");\n\t\t}\n\n\t\tif ( parsed.padding[0] < 0 || parsed.padding[1] < 0 ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'padding' option must be a positive number(s).\");\n\t\t}\n\n\t\tif ( parsed.padding[0] >= 50 || parsed.padding[1] >= 50 ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'padding' option must be less than half the range.\");\n\t\t}\n\t}\n\n\tfunction testDirection ( parsed, entry ) {\n\n\t\t// Set direction as a numerical value for easy parsing.\n\t\t// Invert connection for RTL sliders, so that the proper\n\t\t// handles get the connect/background classes.\n\t\tswitch ( entry ) {\n\t\t  case 'ltr':\n\t\t\tparsed.dir = 0;\n\t\t\tbreak;\n\t\t  case 'rtl':\n\t\t\tparsed.dir = 1;\n\t\t\tbreak;\n\t\t  default:\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'direction' option was not recognized.\");\n\t\t}\n\t}\n\n\tfunction testBehaviour ( parsed, entry ) {\n\n\t\t// Make sure the input is a string.\n\t\tif ( typeof entry !== 'string' ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'behaviour' must be a string containing options.\");\n\t\t}\n\n\t\t// Check if the string contains any keywords.\n\t\t// None are required.\n\t\tvar tap = entry.indexOf('tap') >= 0;\n\t\tvar drag = entry.indexOf('drag') >= 0;\n\t\tvar fixed = entry.indexOf('fixed') >= 0;\n\t\tvar snap = entry.indexOf('snap') >= 0;\n\t\tvar hover = entry.indexOf('hover') >= 0;\n\n\t\tif ( fixed ) {\n\n\t\t\tif ( parsed.handles !== 2 ) {\n\t\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'fixed' behaviour must be used with 2 handles\");\n\t\t\t}\n\n\t\t\t// Use margin to enforce fixed state\n\t\t\ttestMargin(parsed, parsed.start[1] - parsed.start[0]);\n\t\t}\n\n\t\tparsed.events = {\n\t\t\ttap: tap || snap,\n\t\t\tdrag: drag,\n\t\t\tfixed: fixed,\n\t\t\tsnap: snap,\n\t\t\thover: hover\n\t\t};\n\t}\n\n\tfunction testTooltips ( parsed, entry ) {\n\n\t\tif ( entry === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\telse if ( entry === true ) {\n\n\t\t\tparsed.tooltips = [];\n\n\t\t\tfor ( var i = 0; i < parsed.handles; i++ ) {\n\t\t\t\tparsed.tooltips.push(true);\n\t\t\t}\n\t\t}\n\n\t\telse {\n\n\t\t\tparsed.tooltips = asArray(entry);\n\n\t\t\tif ( parsed.tooltips.length !== parsed.handles ) {\n\t\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): must pass a formatter for all handles.\");\n\t\t\t}\n\n\t\t\tparsed.tooltips.forEach(function(formatter){\n\t\t\t\tif ( typeof formatter !== 'boolean' && (typeof formatter !== 'object' || typeof formatter.to !== 'function') ) {\n\t\t\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'tooltips' must be passed a formatter or 'false'.\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction testAriaFormat ( parsed, entry ) {\n\t\tparsed.ariaFormat = entry;\n\t\tvalidateFormat(entry);\n\t}\n\n\tfunction testFormat ( parsed, entry ) {\n\t\tparsed.format = entry;\n\t\tvalidateFormat(entry);\n\t}\n\n\tfunction testCssPrefix ( parsed, entry ) {\n\n\t\tif ( entry !== undefined && typeof entry !== 'string' && entry !== false ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'cssPrefix' must be a string or `false`.\");\n\t\t}\n\n\t\tparsed.cssPrefix = entry;\n\t}\n\n\tfunction testCssClasses ( parsed, entry ) {\n\n\t\tif ( entry !== undefined && typeof entry !== 'object' ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'cssClasses' must be an object.\");\n\t\t}\n\n\t\tif ( typeof parsed.cssPrefix === 'string' ) {\n\t\t\tparsed.cssClasses = {};\n\n\t\t\tfor ( var key in entry ) {\n\t\t\t\tif ( !entry.hasOwnProperty(key) ) { continue; }\n\n\t\t\t\tparsed.cssClasses[key] = parsed.cssPrefix + entry[key];\n\t\t\t}\n\t\t} else {\n\t\t\tparsed.cssClasses = entry;\n\t\t}\n\t}\n\n\t// Test all developer settings and parse to assumption-safe values.\n\tfunction testOptions ( options ) {\n\n\t\t// To prove a fix for #537, freeze options here.\n\t\t// If the object is modified, an error will be thrown.\n\t\t// Object.freeze(options);\n\n\t\tvar parsed = {\n\t\t\tmargin: 0,\n\t\t\tlimit: 0,\n\t\t\tpadding: 0,\n\t\t\tanimate: true,\n\t\t\tanimationDuration: 300,\n\t\t\tariaFormat: defaultFormatter,\n\t\t\tformat: defaultFormatter\n\t\t};\n\n\t\t// Tests are executed in the order they are presented here.\n\t\tvar tests = {\n\t\t\t'step': { r: false, t: testStep },\n\t\t\t'start': { r: true, t: testStart },\n\t\t\t'connect': { r: true, t: testConnect },\n\t\t\t'direction': { r: true, t: testDirection },\n\t\t\t'snap': { r: false, t: testSnap },\n\t\t\t'animate': { r: false, t: testAnimate },\n\t\t\t'animationDuration': { r: false, t: testAnimationDuration },\n\t\t\t'range': { r: true, t: testRange },\n\t\t\t'orientation': { r: false, t: testOrientation },\n\t\t\t'margin': { r: false, t: testMargin },\n\t\t\t'limit': { r: false, t: testLimit },\n\t\t\t'padding': { r: false, t: testPadding },\n\t\t\t'behaviour': { r: true, t: testBehaviour },\n\t\t\t'ariaFormat': { r: false, t: testAriaFormat },\n\t\t\t'format': { r: false, t: testFormat },\n\t\t\t'tooltips': { r: false, t: testTooltips },\n\t\t\t'cssPrefix': { r: false, t: testCssPrefix },\n\t\t\t'cssClasses': { r: false, t: testCssClasses }\n\t\t};\n\n\t\tvar defaults = {\n\t\t\t'connect': false,\n\t\t\t'direction': 'ltr',\n\t\t\t'behaviour': 'tap',\n\t\t\t'orientation': 'horizontal',\n\t\t\t'cssPrefix' : 'noUi-',\n\t\t\t'cssClasses': {\n\t\t\t\ttarget: 'target',\n\t\t\t\tbase: 'base',\n\t\t\t\torigin: 'origin',\n\t\t\t\thandle: 'handle',\n\t\t\t\thandleLower: 'handle-lower',\n\t\t\t\thandleUpper: 'handle-upper',\n\t\t\t\thorizontal: 'horizontal',\n\t\t\t\tvertical: 'vertical',\n\t\t\t\tbackground: 'background',\n\t\t\t\tconnect: 'connect',\n\t\t\t\tconnects: 'connects',\n\t\t\t\tltr: 'ltr',\n\t\t\t\trtl: 'rtl',\n\t\t\t\tdraggable: 'draggable',\n\t\t\t\tdrag: 'state-drag',\n\t\t\t\ttap: 'state-tap',\n\t\t\t\tactive: 'active',\n\t\t\t\ttooltip: 'tooltip',\n\t\t\t\tpips: 'pips',\n\t\t\t\tpipsHorizontal: 'pips-horizontal',\n\t\t\t\tpipsVertical: 'pips-vertical',\n\t\t\t\tmarker: 'marker',\n\t\t\t\tmarkerHorizontal: 'marker-horizontal',\n\t\t\t\tmarkerVertical: 'marker-vertical',\n\t\t\t\tmarkerNormal: 'marker-normal',\n\t\t\t\tmarkerLarge: 'marker-large',\n\t\t\t\tmarkerSub: 'marker-sub',\n\t\t\t\tvalue: 'value',\n\t\t\t\tvalueHorizontal: 'value-horizontal',\n\t\t\t\tvalueVertical: 'value-vertical',\n\t\t\t\tvalueNormal: 'value-normal',\n\t\t\t\tvalueLarge: 'value-large',\n\t\t\t\tvalueSub: 'value-sub'\n\t\t\t}\n\t\t};\n\n\t\t// AriaFormat defaults to regular format, if any.\n\t\tif ( options.format && !options.ariaFormat ) {\n\t\t\toptions.ariaFormat = options.format;\n\t\t}\n\n\t\t// Run all options through a testing mechanism to ensure correct\n\t\t// input. It should be noted that options might get modified to\n\t\t// be handled properly. E.g. wrapping integers in arrays.\n\t\tObject.keys(tests).forEach(function( name ){\n\n\t\t\t// If the option isn't set, but it is required, throw an error.\n\t\t\tif ( options[name] === undefined && defaults[name] === undefined ) {\n\n\t\t\t\tif ( tests[name].r ) {\n\t\t\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): '\" + name + \"' is required.\");\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\ttests[name].t( parsed, options[name] === undefined ? defaults[name] : options[name] );\n\t\t});\n\n\t\t// Forward pips options\n\t\tparsed.pips = options.pips;\n\n\t\t// All recent browsers accept unprefixed transform.\n\t\t// We need -ms- for IE9 and -webkit- for older Android;\n\t\t// Assume use of -webkit- if unprefixed and -ms- are not supported.\n\t\t// https://caniuse.com/#feat=transforms2d\n\t\tvar d = document.createElement(\"div\");\n\t\tvar msPrefix = d.style.msTransform !== undefined;\n\t\tvar noPrefix = d.style.transform !== undefined;\n\n\t\tparsed.transformRule = noPrefix ? 'transform' : (msPrefix ? 'msTransform' : 'webkitTransform');\n\n\t\t// Pips don't move, so we can place them using left/top.\n\t\tvar styles = [['left', 'top'], ['right', 'bottom']];\n\n\t\tparsed.style = styles[parsed.dir][parsed.ort];\n\n\t\treturn parsed;\n\t}\n\n\nfunction closure ( target, options, originalOptions ){\n\n\tvar actions = getActions();\n\tvar supportsTouchActionNone = getSupportsTouchActionNone();\n\tvar supportsPassive = supportsTouchActionNone && getSupportsPassive();\n\n\t// All variables local to 'closure' are prefixed with 'scope_'\n\tvar scope_Target = target;\n\tvar scope_Locations = [];\n\tvar scope_Base;\n\tvar scope_Handles;\n\tvar scope_HandleNumbers = [];\n\tvar scope_ActiveHandlesCount = 0;\n\tvar scope_Connects;\n\tvar scope_Spectrum = options.spectrum;\n\tvar scope_Values = [];\n\tvar scope_Events = {};\n\tvar scope_Self;\n\tvar scope_Pips;\n\tvar scope_Document = target.ownerDocument;\n\tvar scope_DocumentElement = scope_Document.documentElement;\n\tvar scope_Body = scope_Document.body;\n\n\n\t// Creates a node, adds it to target, returns the new node.\n\tfunction addNodeTo ( target, className ) {\n\n\t\tvar div = scope_Document.createElement('div');\n\n\t\tif ( className ) {\n\t\t\taddClass(div, className);\n\t\t}\n\n\t\ttarget.appendChild(div);\n\n\t\treturn div;\n\t}\n\n\t// Append a origin to the base\n\tfunction addOrigin ( base, handleNumber ) {\n\n\t\tvar origin = addNodeTo(base, options.cssClasses.origin);\n\t\tvar handle = addNodeTo(origin, options.cssClasses.handle);\n\n\t\thandle.setAttribute('data-handle', handleNumber);\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\n\t\t// 0 = focusable and reachable\n\t\thandle.setAttribute('tabindex', '0');\n\t\thandle.setAttribute('role', 'slider');\n\t\thandle.setAttribute('aria-orientation', options.ort ? 'vertical' : 'horizontal');\n\n\t\tif ( handleNumber === 0 ) {\n\t\t\taddClass(handle, options.cssClasses.handleLower);\n\t\t}\n\n\t\telse if ( handleNumber === options.handles - 1 ) {\n\t\t\taddClass(handle, options.cssClasses.handleUpper);\n\t\t}\n\n\t\treturn origin;\n\t}\n\n\t// Insert nodes for connect elements\n\tfunction addConnect ( base, add ) {\n\n\t\tif ( !add ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn addNodeTo(base, options.cssClasses.connect);\n\t}\n\n\t// Add handles to the slider base.\n\tfunction addElements ( connectOptions, base ) {\n\n\t\tvar connectBase = addNodeTo(base, options.cssClasses.connects);\n\n\t\tscope_Handles = [];\n\t\tscope_Connects = [];\n\n\t\tscope_Connects.push(addConnect(connectBase, connectOptions[0]));\n\n\t\t// [::::O====O====O====]\n\t\t// connectOptions = [0, 1, 1, 1]\n\n\t\tfor ( var i = 0; i < options.handles; i++ ) {\n\t\t\t// Keep a list of all added handles.\n\t\t\tscope_Handles.push(addOrigin(base, i));\n\t\t\tscope_HandleNumbers[i] = i;\n\t\t\tscope_Connects.push(addConnect(connectBase, connectOptions[i + 1]));\n\t\t}\n\t}\n\n\t// Initialize a single slider.\n\tfunction addSlider ( target ) {\n\n\t\t// Apply classes and data to the target.\n\t\taddClass(target, options.cssClasses.target);\n\n\t\tif ( options.dir === 0 ) {\n\t\t\taddClass(target, options.cssClasses.ltr);\n\t\t} else {\n\t\t\taddClass(target, options.cssClasses.rtl);\n\t\t}\n\n\t\tif ( options.ort === 0 ) {\n\t\t\taddClass(target, options.cssClasses.horizontal);\n\t\t} else {\n\t\t\taddClass(target, options.cssClasses.vertical);\n\t\t}\n\n\t\tscope_Base = addNodeTo(target, options.cssClasses.base);\n\t}\n\n\n\tfunction addTooltip ( handle, handleNumber ) {\n\n\t\tif ( !options.tooltips[handleNumber] ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn addNodeTo(handle.firstChild, options.cssClasses.tooltip);\n\t}\n\n\t// The tooltips option is a shorthand for using the 'update' event.\n\tfunction tooltips ( ) {\n\n\t\t// Tooltips are added with options.tooltips in original order.\n\t\tvar tips = scope_Handles.map(addTooltip);\n\n\t\tbindEvent('update', function(values, handleNumber, unencoded) {\n\n\t\t\tif ( !tips[handleNumber] ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar formattedValue = values[handleNumber];\n\n\t\t\tif ( options.tooltips[handleNumber] !== true ) {\n\t\t\t\tformattedValue = options.tooltips[handleNumber].to(unencoded[handleNumber]);\n\t\t\t}\n\n\t\t\ttips[handleNumber].innerHTML = formattedValue;\n\t\t});\n\t}\n\n\n\tfunction aria ( ) {\n\n\t\tbindEvent('update', function ( values, handleNumber, unencoded, tap, positions ) {\n\n\t\t\t// Update Aria Values for all handles, as a change in one changes min and max values for the next.\n\t\t\tscope_HandleNumbers.forEach(function( handleNumber ){\n\n\t\t\t\tvar handle = scope_Handles[handleNumber];\n\n\t\t\t\tvar min = checkHandlePosition(scope_Locations, handleNumber, 0, true, true, true);\n\t\t\t\tvar max = checkHandlePosition(scope_Locations, handleNumber, 100, true, true, true);\n\n\t\t\t\tvar now = positions[handleNumber];\n\t\t\t\tvar text = options.ariaFormat.to(unencoded[handleNumber]);\n\n\t\t\t\thandle.children[0].setAttribute('aria-valuemin', min.toFixed(1));\n\t\t\t\thandle.children[0].setAttribute('aria-valuemax', max.toFixed(1));\n\t\t\t\thandle.children[0].setAttribute('aria-valuenow', now.toFixed(1));\n\t\t\t\thandle.children[0].setAttribute('aria-valuetext', text);\n\t\t\t});\n\t\t});\n\t}\n\n\n\tfunction getGroup ( mode, values, stepped ) {\n\n\t\t// Use the range.\n\t\tif ( mode === 'range' || mode === 'steps' ) {\n\t\t\treturn scope_Spectrum.xVal;\n\t\t}\n\n\t\tif ( mode === 'count' ) {\n\n\t\t\tif ( values < 2 ) {\n\t\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): 'values' (>= 2) required for mode 'count'.\");\n\t\t\t}\n\n\t\t\t// Divide 0 - 100 in 'count' parts.\n\t\t\tvar interval = values - 1;\n\t\t\tvar spread = ( 100 / interval );\n\n\t\t\tvalues = [];\n\n\t\t\t// List these parts and have them handled as 'positions'.\n\t\t\twhile ( interval-- ) {\n\t\t\t\tvalues[ interval ] = ( interval * spread );\n\t\t\t}\n\n\t\t\tvalues.push(100);\n\n\t\t\tmode = 'positions';\n\t\t}\n\n\t\tif ( mode === 'positions' ) {\n\n\t\t\t// Map all percentages to on-range values.\n\t\t\treturn values.map(function( value ){\n\t\t\t\treturn scope_Spectrum.fromStepping( stepped ? scope_Spectrum.getStep( value ) : value );\n\t\t\t});\n\t\t}\n\n\t\tif ( mode === 'values' ) {\n\n\t\t\t// If the value must be stepped, it needs to be converted to a percentage first.\n\t\t\tif ( stepped ) {\n\n\t\t\t\treturn values.map(function( value ){\n\n\t\t\t\t\t// Convert to percentage, apply step, return to value.\n\t\t\t\t\treturn scope_Spectrum.fromStepping( scope_Spectrum.getStep( scope_Spectrum.toStepping( value ) ) );\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\t// Otherwise, we can simply use the values.\n\t\t\treturn values;\n\t\t}\n\t}\n\n\tfunction generateSpread ( density, mode, group ) {\n\n\t\tfunction safeIncrement(value, increment) {\n\t\t\t// Avoid floating point variance by dropping the smallest decimal places.\n\t\t\treturn (value + increment).toFixed(7) / 1;\n\t\t}\n\n\t\tvar indexes = {};\n\t\tvar firstInRange = scope_Spectrum.xVal[0];\n\t\tvar lastInRange = scope_Spectrum.xVal[scope_Spectrum.xVal.length-1];\n\t\tvar ignoreFirst = false;\n\t\tvar ignoreLast = false;\n\t\tvar prevPct = 0;\n\n\t\t// Create a copy of the group, sort it and filter away all duplicates.\n\t\tgroup = unique(group.slice().sort(function(a, b){ return a - b; }));\n\n\t\t// Make sure the range starts with the first element.\n\t\tif ( group[0] !== firstInRange ) {\n\t\t\tgroup.unshift(firstInRange);\n\t\t\tignoreFirst = true;\n\t\t}\n\n\t\t// Likewise for the last one.\n\t\tif ( group[group.length - 1] !== lastInRange ) {\n\t\t\tgroup.push(lastInRange);\n\t\t\tignoreLast = true;\n\t\t}\n\n\t\tgroup.forEach(function ( current, index ) {\n\n\t\t\t// Get the current step and the lower + upper positions.\n\t\t\tvar step;\n\t\t\tvar i;\n\t\t\tvar q;\n\t\t\tvar low = current;\n\t\t\tvar high = group[index+1];\n\t\t\tvar newPct;\n\t\t\tvar pctDifference;\n\t\t\tvar pctPos;\n\t\t\tvar type;\n\t\t\tvar steps;\n\t\t\tvar realSteps;\n\t\t\tvar stepsize;\n\n\t\t\t// When using 'steps' mode, use the provided steps.\n\t\t\t// Otherwise, we'll step on to the next subrange.\n\t\t\tif ( mode === 'steps' ) {\n\t\t\t\tstep = scope_Spectrum.xNumSteps[ index ];\n\t\t\t}\n\n\t\t\t// Default to a 'full' step.\n\t\t\tif ( !step ) {\n\t\t\t\tstep = high-low;\n\t\t\t}\n\n\t\t\t// Low can be 0, so test for false. If high is undefined,\n\t\t\t// we are at the last subrange. Index 0 is already handled.\n\t\t\tif ( low === false || high === undefined ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Make sure step isn't 0, which would cause an infinite loop (#654)\n\t\t\tstep = Math.max(step, 0.0000001);\n\n\t\t\t// Find all steps in the subrange.\n\t\t\tfor ( i = low; i <= high; i = safeIncrement(i, step) ) {\n\n\t\t\t\t// Get the percentage value for the current step,\n\t\t\t\t// calculate the size for the subrange.\n\t\t\t\tnewPct = scope_Spectrum.toStepping( i );\n\t\t\t\tpctDifference = newPct - prevPct;\n\n\t\t\t\tsteps = pctDifference / density;\n\t\t\t\trealSteps = Math.round(steps);\n\n\t\t\t\t// This ratio represents the amount of percentage-space a point indicates.\n\t\t\t\t// For a density 1 the points/percentage = 1. For density 2, that percentage needs to be re-devided.\n\t\t\t\t// Round the percentage offset to an even number, then divide by two\n\t\t\t\t// to spread the offset on both sides of the range.\n\t\t\t\tstepsize = pctDifference/realSteps;\n\n\t\t\t\t// Divide all points evenly, adding the correct number to this subrange.\n\t\t\t\t// Run up to <= so that 100% gets a point, event if ignoreLast is set.\n\t\t\t\tfor ( q = 1; q <= realSteps; q += 1 ) {\n\n\t\t\t\t\t// The ratio between the rounded value and the actual size might be ~1% off.\n\t\t\t\t\t// Correct the percentage offset by the number of points\n\t\t\t\t\t// per subrange. density = 1 will result in 100 points on the\n\t\t\t\t\t// full range, 2 for 50, 4 for 25, etc.\n\t\t\t\t\tpctPos = prevPct + ( q * stepsize );\n\t\t\t\t\tindexes[pctPos.toFixed(5)] = ['x', 0];\n\t\t\t\t}\n\n\t\t\t\t// Determine the point type.\n\t\t\t\ttype = (group.indexOf(i) > -1) ? 1 : ( mode === 'steps' ? 2 : 0 );\n\n\t\t\t\t// Enforce the 'ignoreFirst' option by overwriting the type for 0.\n\t\t\t\tif ( !index && ignoreFirst ) {\n\t\t\t\t\ttype = 0;\n\t\t\t\t}\n\n\t\t\t\tif ( !(i === high && ignoreLast)) {\n\t\t\t\t\t// Mark the 'type' of this point. 0 = plain, 1 = real value, 2 = step value.\n\t\t\t\t\tindexes[newPct.toFixed(5)] = [i, type];\n\t\t\t\t}\n\n\t\t\t\t// Update the percentage count.\n\t\t\t\tprevPct = newPct;\n\t\t\t}\n\t\t});\n\n\t\treturn indexes;\n\t}\n\n\tfunction addMarking ( spread, filterFunc, formatter ) {\n\n\t\tvar element = scope_Document.createElement('div');\n\n\t\tvar valueSizeClasses = [\n\t\t\toptions.cssClasses.valueNormal,\n\t\t\toptions.cssClasses.valueLarge,\n\t\t\toptions.cssClasses.valueSub\n\t\t];\n\t\tvar markerSizeClasses = [\n\t\t\toptions.cssClasses.markerNormal,\n\t\t\toptions.cssClasses.markerLarge,\n\t\t\toptions.cssClasses.markerSub\n\t\t];\n\t\tvar valueOrientationClasses = [\n\t\t\toptions.cssClasses.valueHorizontal,\n\t\t\toptions.cssClasses.valueVertical\n\t\t];\n\t\tvar markerOrientationClasses = [\n\t\t\toptions.cssClasses.markerHorizontal,\n\t\t\toptions.cssClasses.markerVertical\n\t\t];\n\n\t\taddClass(element, options.cssClasses.pips);\n\t\taddClass(element, options.ort === 0 ? options.cssClasses.pipsHorizontal : options.cssClasses.pipsVertical);\n\n\t\tfunction getClasses( type, source ){\n\t\t\tvar a = source === options.cssClasses.value;\n\t\t\tvar orientationClasses = a ? valueOrientationClasses : markerOrientationClasses;\n\t\t\tvar sizeClasses = a ? valueSizeClasses : markerSizeClasses;\n\n\t\t\treturn source + ' ' + orientationClasses[options.ort] + ' ' + sizeClasses[type];\n\t\t}\n\n\t\tfunction addSpread ( offset, values ){\n\n\t\t\t// Apply the filter function, if it is set.\n\t\t\tvalues[1] = (values[1] && filterFunc) ? filterFunc(values[0], values[1]) : values[1];\n\n\t\t\t// Add a marker for every point\n\t\t\tvar node = addNodeTo(element, false);\n\t\t\t\tnode.className = getClasses(values[1], options.cssClasses.marker);\n\t\t\t\tnode.style[options.style] = offset + '%';\n\n\t\t\t// Values are only appended for points marked '1' or '2'.\n\t\t\tif ( values[1] ) {\n\t\t\t\tnode = addNodeTo(element, false);\n\t\t\t\tnode.className = getClasses(values[1], options.cssClasses.value);\n\t\t\t\tnode.setAttribute('data-value', values[0]);\n\t\t\t\tnode.style[options.style] = offset + '%';\n\t\t\t\tnode.innerText = formatter.to(values[0]);\n\t\t\t}\n\t\t}\n\n\t\t// Append all points.\n\t\tObject.keys(spread).forEach(function(a){\n\t\t\taddSpread(a, spread[a]);\n\t\t});\n\n\t\treturn element;\n\t}\n\n\tfunction removePips ( ) {\n\t\tif ( scope_Pips ) {\n\t\t\tremoveElement(scope_Pips);\n\t\t\tscope_Pips = null;\n\t\t}\n\t}\n\n\tfunction pips ( grid ) {\n\n\t\t// Fix #669\n\t\tremovePips();\n\n\t\tvar mode = grid.mode;\n\t\tvar density = grid.density || 1;\n\t\tvar filter = grid.filter || false;\n\t\tvar values = grid.values || false;\n\t\tvar stepped = grid.stepped || false;\n\t\tvar group = getGroup( mode, values, stepped );\n\t\tvar spread = generateSpread( density, mode, group );\n\t\tvar format = grid.format || {\n\t\t\tto: Math.round\n\t\t};\n\n\t\tscope_Pips = scope_Target.appendChild(addMarking(\n\t\t\tspread,\n\t\t\tfilter,\n\t\t\tformat\n\t\t));\n\n\t\treturn scope_Pips;\n\t}\n\n\n\t// Shorthand for base dimensions.\n\tfunction baseSize ( ) {\n\t\tvar rect = scope_Base.getBoundingClientRect(), alt = 'offset' + ['Width', 'Height'][options.ort];\n\t\treturn options.ort === 0 ? (rect.width||scope_Base[alt]) : (rect.height||scope_Base[alt]);\n\t}\n\n\t// Handler for attaching events trough a proxy.\n\tfunction attachEvent ( events, element, callback, data ) {\n\n\t\t// This function can be used to 'filter' events to the slider.\n\t\t// element is a node, not a nodeList\n\n\t\tvar method = function ( e ){\n\n\t\t\te = fixEvent(e, data.pageOffset, data.target || element);\n\n\t\t\t// fixEvent returns false if this event has a different target\n\t\t\t// when handling (multi-) touch events;\n\t\t\tif ( !e ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// doNotReject is passed by all end events to make sure released touches\n\t\t\t// are not rejected, leaving the slider \"stuck\" to the cursor;\n\t\t\tif ( scope_Target.hasAttribute('disabled') && !data.doNotReject ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Stop if an active 'tap' transition is taking place.\n\t\t\tif ( hasClass(scope_Target, options.cssClasses.tap) && !data.doNotReject ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Ignore right or middle clicks on start #454\n\t\t\tif ( events === actions.start && e.buttons !== undefined && e.buttons > 1 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Ignore right or middle clicks on start #454\n\t\t\tif ( data.hover && e.buttons ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// 'supportsPassive' is only true if a browser also supports touch-action: none in CSS.\n\t\t\t// iOS safari does not, so it doesn't get to benefit from passive scrolling. iOS does support\n\t\t\t// touch-action: manipulation, but that allows panning, which breaks\n\t\t\t// sliders after zooming/on non-responsive pages.\n\t\t\t// See: https://bugs.webkit.org/show_bug.cgi?id=133112\n\t\t\tif ( !supportsPassive ) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\te.calcPoint = e.points[ options.ort ];\n\n\t\t\t// Call the event handler with the event [ and additional data ].\n\t\t\tcallback ( e, data );\n\t\t};\n\n\t\tvar methods = [];\n\n\t\t// Bind a closure on the target for every event type.\n\t\tevents.split(' ').forEach(function( eventName ){\n\t\t\telement.addEventListener(eventName, method, supportsPassive ? { passive: true } : false);\n\t\t\tmethods.push([eventName, method]);\n\t\t});\n\n\t\treturn methods;\n\t}\n\n\t// Provide a clean event with standardized offset values.\n\tfunction fixEvent ( e, pageOffset, target ) {\n\n\t\t// Filter the event to register the type, which can be\n\t\t// touch, mouse or pointer. Offset changes need to be\n\t\t// made on an event specific basis.\n\t\tvar touch = e.type.indexOf('touch') === 0;\n\t\tvar mouse = e.type.indexOf('mouse') === 0;\n\t\tvar pointer = e.type.indexOf('pointer') === 0;\n\n\t\tvar x;\n\t\tvar y;\n\n\t\t// IE10 implemented pointer events with a prefix;\n\t\tif ( e.type.indexOf('MSPointer') === 0 ) {\n\t\t\tpointer = true;\n\t\t}\n\n\n\t\t// In the event that multitouch is activated, the only thing one handle should be concerned\n\t\t// about is the touches that originated on top of it.\n\t\tif ( touch ) {\n\n\t\t\t// Returns true if a touch originated on the target.\n\t\t\tvar isTouchOnTarget = function (touch) {\n\t\t\t\treturn touch.target === target || target.contains(touch.target);\n\t\t\t};\n\n\t\t\t// In the case of touchstart events, we need to make sure there is still no more than one\n\t\t\t// touch on the target so we look amongst all touches.\n\t\t\tif (e.type === 'touchstart') {\n\n\t\t\t\tvar targetTouches = Array.prototype.filter.call(e.touches, isTouchOnTarget);\n\n\t\t\t\t// Do not support more than one touch per handle.\n\t\t\t\tif ( targetTouches.length > 1 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tx = targetTouches[0].pageX;\n\t\t\t\ty = targetTouches[0].pageY;\n\n\t\t\t} else {\n\n\t\t\t\t// In the other cases, find on changedTouches is enough.\n\t\t\t\tvar targetTouch = Array.prototype.find.call(e.changedTouches, isTouchOnTarget);\n\n\t\t\t\t// Cancel if the target touch has not moved.\n\t\t\t\tif ( !targetTouch ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tx = targetTouch.pageX;\n\t\t\t\ty = targetTouch.pageY;\n\t\t\t}\n\t\t}\n\n\t\tpageOffset = pageOffset || getPageOffset(scope_Document);\n\n\t\tif ( mouse || pointer ) {\n\t\t\tx = e.clientX + pageOffset.x;\n\t\t\ty = e.clientY + pageOffset.y;\n\t\t}\n\n\t\te.pageOffset = pageOffset;\n\t\te.points = [x, y];\n\t\te.cursor = mouse || pointer; // Fix #435\n\n\t\treturn e;\n\t}\n\n\t// Translate a coordinate in the document to a percentage on the slider\n\tfunction calcPointToPercentage ( calcPoint ) {\n\t\tvar location = calcPoint - offset(scope_Base, options.ort);\n\t\tvar proposal = ( location * 100 ) / baseSize();\n\t\treturn options.dir ? 100 - proposal : proposal;\n\t}\n\n\t// Find handle closest to a certain percentage on the slider\n\tfunction getClosestHandle ( proposal ) {\n\n\t\tvar closest = 100;\n\t\tvar handleNumber = false;\n\n\t\tscope_Handles.forEach(function(handle, index){\n\n\t\t\t// Disabled handles are ignored\n\t\t\tif ( handle.hasAttribute('disabled') ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar pos = Math.abs(scope_Locations[index] - proposal);\n\n\t\t\tif ( pos < closest ) {\n\t\t\t\thandleNumber = index;\n\t\t\t\tclosest = pos;\n\t\t\t}\n\t\t});\n\n\t\treturn handleNumber;\n\t}\n\n\t// Moves handle(s) by a percentage\n\t// (bool, % to move, [% where handle started, ...], [index in scope_Handles, ...])\n\tfunction moveHandles ( upward, proposal, locations, handleNumbers ) {\n\n\t\tvar proposals = locations.slice();\n\n\t\tvar b = [!upward, upward];\n\t\tvar f = [upward, !upward];\n\n\t\t// Copy handleNumbers so we don't change the dataset\n\t\thandleNumbers = handleNumbers.slice();\n\n\t\t// Check to see which handle is 'leading'.\n\t\t// If that one can't move the second can't either.\n\t\tif ( upward ) {\n\t\t\thandleNumbers.reverse();\n\t\t}\n\n\t\t// Step 1: get the maximum percentage that any of the handles can move\n\t\tif ( handleNumbers.length > 1 ) {\n\n\t\t\thandleNumbers.forEach(function(handleNumber, o) {\n\n\t\t\t\tvar to = checkHandlePosition(proposals, handleNumber, proposals[handleNumber] + proposal, b[o], f[o], false);\n\n\t\t\t\t// Stop if one of the handles can't move.\n\t\t\t\tif ( to === false ) {\n\t\t\t\t\tproposal = 0;\n\t\t\t\t} else {\n\t\t\t\t\tproposal = to - proposals[handleNumber];\n\t\t\t\t\tproposals[handleNumber] = to;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// If using one handle, check backward AND forward\n\t\telse {\n\t\t\tb = f = [true];\n\t\t}\n\n\t\tvar state = false;\n\n\t\t// Step 2: Try to set the handles with the found percentage\n\t\thandleNumbers.forEach(function(handleNumber, o) {\n\t\t\tstate = setHandle(handleNumber, locations[handleNumber] + proposal, b[o], f[o]) || state;\n\t\t});\n\n\t\t// Step 3: If a handle moved, fire events\n\t\tif ( state ) {\n\t\t\thandleNumbers.forEach(function(handleNumber){\n\t\t\t\tfireEvent('update', handleNumber);\n\t\t\t\tfireEvent('slide', handleNumber);\n\t\t\t});\n\t\t}\n\t}\n\n\t// External event handling\n\tfunction fireEvent ( eventName, handleNumber, tap ) {\n\n\t\tObject.keys(scope_Events).forEach(function( targetEvent ) {\n\n\t\t\tvar eventType = targetEvent.split('.')[0];\n\n\t\t\tif ( eventName === eventType ) {\n\t\t\t\tscope_Events[targetEvent].forEach(function( callback ) {\n\n\t\t\t\t\tcallback.call(\n\t\t\t\t\t\t// Use the slider public API as the scope ('this')\n\t\t\t\t\t\tscope_Self,\n\t\t\t\t\t\t// Return values as array, so arg_1[arg_2] is always valid.\n\t\t\t\t\t\tscope_Values.map(options.format.to),\n\t\t\t\t\t\t// Handle index, 0 or 1\n\t\t\t\t\t\thandleNumber,\n\t\t\t\t\t\t// Unformatted slider values\n\t\t\t\t\t\tscope_Values.slice(),\n\t\t\t\t\t\t// Event is fired by tap, true or false\n\t\t\t\t\t\ttap || false,\n\t\t\t\t\t\t// Left offset of the handle, in relation to the slider\n\t\t\t\t\t\tscope_Locations.slice()\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\n\t// Fire 'end' when a mouse or pen leaves the document.\n\tfunction documentLeave ( event, data ) {\n\t\tif ( event.type === \"mouseout\" && event.target.nodeName === \"HTML\" && event.relatedTarget === null ){\n\t\t\teventEnd (event, data);\n\t\t}\n\t}\n\n\t// Handle movement on document for handle and range drag.\n\tfunction eventMove ( event, data ) {\n\n\t\t// Fix #498\n\t\t// Check value of .buttons in 'start' to work around a bug in IE10 mobile (data.buttonsProperty).\n\t\t// https://connect.microsoft.com/IE/feedback/details/927005/mobile-ie10-windows-phone-buttons-property-of-pointermove-event-always-zero\n\t\t// IE9 has .buttons and .which zero on mousemove.\n\t\t// Firefox breaks the spec MDN defines.\n\t\tif ( navigator.appVersion.indexOf(\"MSIE 9\") === -1 && event.buttons === 0 && data.buttonsProperty !== 0 ) {\n\t\t\treturn eventEnd(event, data);\n\t\t}\n\n\t\t// Check if we are moving up or down\n\t\tvar movement = (options.dir ? -1 : 1) * (event.calcPoint - data.startCalcPoint);\n\n\t\t// Convert the movement into a percentage of the slider width/height\n\t\tvar proposal = (movement * 100) / data.baseSize;\n\n\t\tmoveHandles(movement > 0, proposal, data.locations, data.handleNumbers);\n\t}\n\n\t// Unbind move events on document, call callbacks.\n\tfunction eventEnd ( event, data ) {\n\n\t\t// The handle is no longer active, so remove the class.\n\t\tif ( data.handle ) {\n\t\t\tremoveClass(data.handle, options.cssClasses.active);\n\t\t\tscope_ActiveHandlesCount -= 1;\n\t\t}\n\n\t\t// Unbind the move and end events, which are added on 'start'.\n\t\tdata.listeners.forEach(function( c ) {\n\t\t\tscope_DocumentElement.removeEventListener(c[0], c[1]);\n\t\t});\n\n\t\tif ( scope_ActiveHandlesCount === 0 ) {\n\t\t\t// Remove dragging class.\n\t\t\tremoveClass(scope_Target, options.cssClasses.drag);\n\t\t\tsetZindex();\n\n\t\t\t// Remove cursor styles and text-selection events bound to the body.\n\t\t\tif ( event.cursor ) {\n\t\t\t\tscope_Body.style.cursor = '';\n\t\t\t\tscope_Body.removeEventListener('selectstart', preventDefault);\n\t\t\t}\n\t\t}\n\n\t\tdata.handleNumbers.forEach(function(handleNumber){\n\t\t\tfireEvent('change', handleNumber);\n\t\t\tfireEvent('set', handleNumber);\n\t\t\tfireEvent('end', handleNumber);\n\t\t});\n\t}\n\n\t// Bind move events on document.\n\tfunction eventStart ( event, data ) {\n\n\t\tvar handle;\n\t\tif ( data.handleNumbers.length === 1 ) {\n\n\t\t\tvar handleOrigin = scope_Handles[data.handleNumbers[0]];\n\n\t\t\t// Ignore 'disabled' handles\n\t\t\tif ( handleOrigin.hasAttribute('disabled') ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\thandle = handleOrigin.children[0];\n\t\t\tscope_ActiveHandlesCount += 1;\n\n\t\t\t// Mark the handle as 'active' so it can be styled.\n\t\t\taddClass(handle, options.cssClasses.active);\n\t\t}\n\n\t\t// A drag should never propagate up to the 'tap' event.\n\t\tevent.stopPropagation();\n\n\t\t// Record the event listeners.\n\t\tvar listeners = [];\n\n\t\t// Attach the move and end events.\n\t\tvar moveEvent = attachEvent(actions.move, scope_DocumentElement, eventMove, {\n\t\t\t// The event target has changed so we need to propagate the original one so that we keep\n\t\t\t// relying on it to extract target touches.\n\t\t\ttarget: event.target,\n\t\t\thandle: handle,\n\t\t\tlisteners: listeners,\n\t\t\tstartCalcPoint: event.calcPoint,\n\t\t\tbaseSize: baseSize(),\n\t\t\tpageOffset: event.pageOffset,\n\t\t\thandleNumbers: data.handleNumbers,\n\t\t\tbuttonsProperty: event.buttons,\n\t\t\tlocations: scope_Locations.slice()\n\t\t});\n\n\t\tvar endEvent = attachEvent(actions.end, scope_DocumentElement, eventEnd, {\n\t\t\ttarget: event.target,\n\t\t\thandle: handle,\n\t\t\tlisteners: listeners,\n\t\t\tdoNotReject: true,\n\t\t\thandleNumbers: data.handleNumbers\n\t\t});\n\n\t\tvar outEvent = attachEvent(\"mouseout\", scope_DocumentElement, documentLeave, {\n\t\t\ttarget: event.target,\n\t\t\thandle: handle,\n\t\t\tlisteners: listeners,\n\t\t\tdoNotReject: true,\n\t\t\thandleNumbers: data.handleNumbers\n\t\t});\n\n\t\t// We want to make sure we pushed the listeners in the listener list rather than creating\n\t\t// a new one as it has already been passed to the event handlers.\n\t\tlisteners.push.apply(listeners, moveEvent.concat(endEvent, outEvent));\n\n\t\t// Text selection isn't an issue on touch devices,\n\t\t// so adding cursor styles can be skipped.\n\t\tif ( event.cursor ) {\n\n\t\t\t// Prevent the 'I' cursor and extend the range-drag cursor.\n\t\t\tscope_Body.style.cursor = getComputedStyle(event.target).cursor;\n\n\t\t\t// Mark the target with a dragging state.\n\t\t\tif ( scope_Handles.length > 1 ) {\n\t\t\t\taddClass(scope_Target, options.cssClasses.drag);\n\t\t\t}\n\n\t\t\t// Prevent text selection when dragging the handles.\n\t\t\t// In noUiSlider <= 9.2.0, this was handled by calling preventDefault on mouse/touch start/move,\n\t\t\t// which is scroll blocking. The selectstart event is supported by FireFox starting from version 52,\n\t\t\t// meaning the only holdout is iOS Safari. This doesn't matter: text selection isn't triggered there.\n\t\t\t// The 'cursor' flag is false.\n\t\t\t// See: http://caniuse.com/#search=selectstart\n\t\t\tscope_Body.addEventListener('selectstart', preventDefault, false);\n\t\t}\n\n\t\tdata.handleNumbers.forEach(function(handleNumber){\n\t\t\tfireEvent('start', handleNumber);\n\t\t});\n\t}\n\n\t// Move closest handle to tapped location.\n\tfunction eventTap ( event ) {\n\n\t\t// The tap event shouldn't propagate up\n\t\tevent.stopPropagation();\n\n\t\tvar proposal = calcPointToPercentage(event.calcPoint);\n\t\tvar handleNumber = getClosestHandle(proposal);\n\n\t\t// Tackle the case that all handles are 'disabled'.\n\t\tif ( handleNumber === false ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Flag the slider as it is now in a transitional state.\n\t\t// Transition takes a configurable amount of ms (default 300). Re-enable the slider after that.\n\t\tif ( !options.events.snap ) {\n\t\t\taddClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);\n\t\t}\n\n\t\tsetHandle(handleNumber, proposal, true, true);\n\n\t\tsetZindex();\n\n\t\tfireEvent('slide', handleNumber, true);\n\t\tfireEvent('update', handleNumber, true);\n\t\tfireEvent('change', handleNumber, true);\n\t\tfireEvent('set', handleNumber, true);\n\n\t\tif ( options.events.snap ) {\n\t\t\teventStart(event, { handleNumbers: [handleNumber] });\n\t\t}\n\t}\n\n\t// Fires a 'hover' event for a hovered mouse/pen position.\n\tfunction eventHover ( event ) {\n\n\t\tvar proposal = calcPointToPercentage(event.calcPoint);\n\n\t\tvar to = scope_Spectrum.getStep(proposal);\n\t\tvar value = scope_Spectrum.fromStepping(to);\n\n\t\tObject.keys(scope_Events).forEach(function( targetEvent ) {\n\t\t\tif ( 'hover' === targetEvent.split('.')[0] ) {\n\t\t\t\tscope_Events[targetEvent].forEach(function( callback ) {\n\t\t\t\t\tcallback.call( scope_Self, value );\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t// Attach events to several slider parts.\n\tfunction bindSliderEvents ( behaviour ) {\n\n\t\t// Attach the standard drag event to the handles.\n\t\tif ( !behaviour.fixed ) {\n\n\t\t\tscope_Handles.forEach(function( handle, index ){\n\n\t\t\t\t// These events are only bound to the visual handle\n\t\t\t\t// element, not the 'real' origin element.\n\t\t\t\tattachEvent ( actions.start, handle.children[0], eventStart, {\n\t\t\t\t\thandleNumbers: [index]\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t// Attach the tap event to the slider base.\n\t\tif ( behaviour.tap ) {\n\t\t\tattachEvent (actions.start, scope_Base, eventTap, {});\n\t\t}\n\n\t\t// Fire hover events\n\t\tif ( behaviour.hover ) {\n\t\t\tattachEvent (actions.move, scope_Base, eventHover, { hover: true });\n\t\t}\n\n\t\t// Make the range draggable.\n\t\tif ( behaviour.drag ){\n\n\t\t\tscope_Connects.forEach(function( connect, index ){\n\n\t\t\t\tif ( connect === false || index === 0 || index === scope_Connects.length - 1 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar handleBefore = scope_Handles[index - 1];\n\t\t\t\tvar handleAfter = scope_Handles[index];\n\t\t\t\tvar eventHolders = [connect];\n\n\t\t\t\taddClass(connect, options.cssClasses.draggable);\n\n\t\t\t\t// When the range is fixed, the entire range can\n\t\t\t\t// be dragged by the handles. The handle in the first\n\t\t\t\t// origin will propagate the start event upward,\n\t\t\t\t// but it needs to be bound manually on the other.\n\t\t\t\tif ( behaviour.fixed ) {\n\t\t\t\t\teventHolders.push(handleBefore.children[0]);\n\t\t\t\t\teventHolders.push(handleAfter.children[0]);\n\t\t\t\t}\n\n\t\t\t\teventHolders.forEach(function( eventHolder ) {\n\t\t\t\t\tattachEvent ( actions.start, eventHolder, eventStart, {\n\t\t\t\t\t\thandles: [handleBefore, handleAfter],\n\t\t\t\t\t\thandleNumbers: [index - 1, index]\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\n\t// Split out the handle positioning logic so the Move event can use it, too\n\tfunction checkHandlePosition ( reference, handleNumber, to, lookBackward, lookForward, getValue ) {\n\n\t\t// For sliders with multiple handles, limit movement to the other handle.\n\t\t// Apply the margin option by adding it to the handle positions.\n\t\tif ( scope_Handles.length > 1 ) {\n\n\t\t\tif ( lookBackward && handleNumber > 0 ) {\n\t\t\t\tto = Math.max(to, reference[handleNumber - 1] + options.margin);\n\t\t\t}\n\n\t\t\tif ( lookForward && handleNumber < scope_Handles.length - 1 ) {\n\t\t\t\tto = Math.min(to, reference[handleNumber + 1] - options.margin);\n\t\t\t}\n\t\t}\n\n\t\t// The limit option has the opposite effect, limiting handles to a\n\t\t// maximum distance from another. Limit must be > 0, as otherwise\n\t\t// handles would be unmoveable.\n\t\tif ( scope_Handles.length > 1 && options.limit ) {\n\n\t\t\tif ( lookBackward && handleNumber > 0 ) {\n\t\t\t\tto = Math.min(to, reference[handleNumber - 1] + options.limit);\n\t\t\t}\n\n\t\t\tif ( lookForward && handleNumber < scope_Handles.length - 1 ) {\n\t\t\t\tto = Math.max(to, reference[handleNumber + 1] - options.limit);\n\t\t\t}\n\t\t}\n\n\t\t// The padding option keeps the handles a certain distance from the\n\t\t// edges of the slider. Padding must be > 0.\n\t\tif ( options.padding ) {\n\n\t\t\tif ( handleNumber === 0 ) {\n\t\t\t\tto = Math.max(to, options.padding[0]);\n\t\t\t}\n\n\t\t\tif ( handleNumber === scope_Handles.length - 1 ) {\n\t\t\t\tto = Math.min(to, 100 - options.padding[1]);\n\t\t\t}\n\t\t}\n\n\t\tto = scope_Spectrum.getStep(to);\n\n\t\t// Limit percentage to the 0 - 100 range\n\t\tto = limit(to);\n\n\t\t// Return false if handle can't move\n\t\tif ( to === reference[handleNumber] && !getValue ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn to;\n\t}\n\n\t// Uses slider orientation to create CSS rules. a = base value;\n\tfunction inRuleOrder ( v, a ) {\n\t\tvar o = options.ort;\n\t\treturn (o?a:v) + ', ' + (o?v:a);\n\t}\n\n\tfunction toPct ( pct ) {\n\t\treturn pct + '%';\n\t}\n\n\t// Takes a base value and an offset. This offset is used for the connect bar size.\n\t// In the initial design for this feature, the origin element was 1% wide.\n\t// Unfortunately, a rounding bug in Chrome makes it impossible to implement this feature\n\t// in this manner: https://bugs.chromium.org/p/chromium/issues/detail?id=798223\n\tfunction transformDirection ( a, b ) {\n\t\treturn options.dir ? 100 - a - b : a;\n\t}\n\n\t// Updates scope_Locations and scope_Values, updates visual state\n\tfunction updateHandlePosition ( handleNumber, to ) {\n\n\t\t// Update locations.\n\t\tscope_Locations[handleNumber] = to;\n\n\t\t// Convert the value to the slider stepping/range.\n\t\tscope_Values[handleNumber] = scope_Spectrum.fromStepping(to);\n\n\t\tvar rule = 'translate(' + inRuleOrder(toPct(transformDirection(to, 0)), '0') + ')';\n\t\tscope_Handles[handleNumber].style[options.transformRule] = rule;\n\n\t\tupdateConnect(handleNumber);\n\t\tupdateConnect(handleNumber + 1);\n\t}\n\n\tfunction setZindex ( ) {\n\n\t\tscope_HandleNumbers.forEach(function(handleNumber){\n\t\t\t// Handles before the slider middle are stacked later = higher,\n\t\t\t// Handles after the middle later is lower\n\t\t\t// [[7] [8] .......... | .......... [5] [4]\n\t\t\tvar dir = (scope_Locations[handleNumber] > 50 ? -1 : 1);\n\t\t\tvar zIndex = 3 + (scope_Handles.length + (dir * handleNumber));\n\t\t\tscope_Handles[handleNumber].style.zIndex = zIndex;\n\t\t});\n\t}\n\n\t// Test suggested values and apply margin, step.\n\tfunction setHandle ( handleNumber, to, lookBackward, lookForward ) {\n\n\t\tto = checkHandlePosition(scope_Locations, handleNumber, to, lookBackward, lookForward, false);\n\n\t\tif ( to === false ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tupdateHandlePosition(handleNumber, to);\n\n\t\treturn true;\n\t}\n\n\t// Updates style attribute for connect nodes\n\tfunction updateConnect ( index ) {\n\n\t\t// Skip connects set to false\n\t\tif ( !scope_Connects[index] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar l = 0;\n\t\tvar h = 100;\n\n\t\tif ( index !== 0 ) {\n\t\t\tl = scope_Locations[index - 1];\n\t\t}\n\n\t\tif ( index !== scope_Connects.length - 1 ) {\n\t\t\th = scope_Locations[index];\n\t\t}\n\n\t\t// We use two rules:\n\t\t// 'translate' to change the left/top offset;\n\t\t// 'scale' to change the width of the element;\n\t\t// As the element has a width of 100%, a translation of 100% is equal to 100% of the parent (.noUi-base)\n\t\tvar connectWidth = h - l;\n\t\tvar translateRule = 'translate(' + inRuleOrder(toPct(transformDirection(l, connectWidth)), '0') + ')';\n\t\tvar scaleRule = 'scale(' + inRuleOrder(connectWidth / 100, '1') + ')';\n\n\t\tscope_Connects[index].style[options.transformRule] = translateRule + ' ' + scaleRule;\n\t}\n\n\t// Parses value passed to .set method. Returns current value if not parseable.\n\tfunction resolveToValue ( to, handleNumber ) {\n\n\t\t// Setting with null indicates an 'ignore'.\n\t\t// Inputting 'false' is invalid.\n\t\tif ( to === null || to === false || to === undefined ) {\n\t\t\treturn scope_Locations[handleNumber];\n\t\t}\n\n\t\t// If a formatted number was passed, attempt to decode it.\n\t\tif ( typeof to === 'number' ) {\n\t\t\tto = String(to);\n\t\t}\n\n\t\tto = options.format.from(to);\n\t\tto = scope_Spectrum.toStepping(to);\n\n\t\t// If parsing the number failed, use the current value.\n\t\tif ( to === false || isNaN(to) ) {\n\t\t\treturn scope_Locations[handleNumber];\n\t\t}\n\n\t\treturn to;\n\t}\n\n\t// Set the slider value.\n\tfunction valueSet ( input, fireSetEvent ) {\n\n\t\tvar values = asArray(input);\n\t\tvar isInit = scope_Locations[0] === undefined;\n\n\t\t// Event fires by default\n\t\tfireSetEvent = (fireSetEvent === undefined ? true : !!fireSetEvent);\n\n\t\t// Animation is optional.\n\t\t// Make sure the initial values were set before using animated placement.\n\t\tif ( options.animate && !isInit ) {\n\t\t\taddClassFor(scope_Target, options.cssClasses.tap, options.animationDuration);\n\t\t}\n\n\t\t// First pass, without lookAhead but with lookBackward. Values are set from left to right.\n\t\tscope_HandleNumbers.forEach(function(handleNumber){\n\t\t\tsetHandle(handleNumber, resolveToValue(values[handleNumber], handleNumber), true, false);\n\t\t});\n\n\t\t// Second pass. Now that all base values are set, apply constraints\n\t\tscope_HandleNumbers.forEach(function(handleNumber){\n\t\t\tsetHandle(handleNumber, scope_Locations[handleNumber], true, true);\n\t\t});\n\n\t\tsetZindex();\n\n\t\tscope_HandleNumbers.forEach(function(handleNumber){\n\n\t\t\tfireEvent('update', handleNumber);\n\n\t\t\t// Fire the event only for handles that received a new value, as per #579\n\t\t\tif ( values[handleNumber] !== null && fireSetEvent ) {\n\t\t\t\tfireEvent('set', handleNumber);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Reset slider to initial values\n\tfunction valueReset ( fireSetEvent ) {\n\t\tvalueSet(options.start, fireSetEvent);\n\t}\n\n\t// Get the slider value.\n\tfunction valueGet ( ) {\n\n\t\tvar values = scope_Values.map(options.format.to);\n\n\t\t// If only one handle is used, return a single value.\n\t\tif ( values.length === 1 ){\n\t\t\treturn values[0];\n\t\t}\n\n\t\treturn values;\n\t}\n\n\t// Removes classes from the root and empties it.\n\tfunction destroy ( ) {\n\n\t\tfor ( var key in options.cssClasses ) {\n\t\t\tif ( !options.cssClasses.hasOwnProperty(key) ) { continue; }\n\t\t\tremoveClass(scope_Target, options.cssClasses[key]);\n\t\t}\n\n\t\twhile (scope_Target.firstChild) {\n\t\t\tscope_Target.removeChild(scope_Target.firstChild);\n\t\t}\n\n\t\tdelete scope_Target.noUiSlider;\n\t}\n\n\t// Get the current step size for the slider.\n\tfunction getCurrentStep ( ) {\n\n\t\t// Check all locations, map them to their stepping point.\n\t\t// Get the step point, then find it in the input list.\n\t\treturn scope_Locations.map(function( location, index ){\n\n\t\t\tvar nearbySteps = scope_Spectrum.getNearbySteps( location );\n\t\t\tvar value = scope_Values[index];\n\t\t\tvar increment = nearbySteps.thisStep.step;\n\t\t\tvar decrement = null;\n\n\t\t\t// If the next value in this step moves into the next step,\n\t\t\t// the increment is the start of the next step - the current value\n\t\t\tif ( increment !== false ) {\n\t\t\t\tif ( value + increment > nearbySteps.stepAfter.startValue ) {\n\t\t\t\t\tincrement = nearbySteps.stepAfter.startValue - value;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// If the value is beyond the starting point\n\t\t\tif ( value > nearbySteps.thisStep.startValue ) {\n\t\t\t\tdecrement = nearbySteps.thisStep.step;\n\t\t\t}\n\n\t\t\telse if ( nearbySteps.stepBefore.step === false ) {\n\t\t\t\tdecrement = false;\n\t\t\t}\n\n\t\t\t// If a handle is at the start of a step, it always steps back into the previous step first\n\t\t\telse {\n\t\t\t\tdecrement = value - nearbySteps.stepBefore.highestStep;\n\t\t\t}\n\n\n\t\t\t// Now, if at the slider edges, there is not in/decrement\n\t\t\tif ( location === 100 ) {\n\t\t\t\tincrement = null;\n\t\t\t}\n\n\t\t\telse if ( location === 0 ) {\n\t\t\t\tdecrement = null;\n\t\t\t}\n\n\t\t\t// As per #391, the comparison for the decrement step can have some rounding issues.\n\t\t\tvar stepDecimals = scope_Spectrum.countStepDecimals();\n\n\t\t\t// Round per #391\n\t\t\tif ( increment !== null && increment !== false ) {\n\t\t\t\tincrement = Number(increment.toFixed(stepDecimals));\n\t\t\t}\n\n\t\t\tif ( decrement !== null && decrement !== false ) {\n\t\t\t\tdecrement = Number(decrement.toFixed(stepDecimals));\n\t\t\t}\n\n\t\t\treturn [decrement, increment];\n\t\t});\n\t}\n\n\t// Attach an event to this slider, possibly including a namespace\n\tfunction bindEvent ( namespacedEvent, callback ) {\n\t\tscope_Events[namespacedEvent] = scope_Events[namespacedEvent] || [];\n\t\tscope_Events[namespacedEvent].push(callback);\n\n\t\t// If the event bound is 'update,' fire it immediately for all handles.\n\t\tif ( namespacedEvent.split('.')[0] === 'update' ) {\n\t\t\tscope_Handles.forEach(function(a, index){\n\t\t\t\tfireEvent('update', index);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Undo attachment of event\n\tfunction removeEvent ( namespacedEvent ) {\n\n\t\tvar event = namespacedEvent && namespacedEvent.split('.')[0];\n\t\tvar namespace = event && namespacedEvent.substring(event.length);\n\n\t\tObject.keys(scope_Events).forEach(function( bind ){\n\n\t\t\tvar tEvent = bind.split('.')[0],\n\t\t\t\ttNamespace = bind.substring(tEvent.length);\n\n\t\t\tif ( (!event || event === tEvent) && (!namespace || namespace === tNamespace) ) {\n\t\t\t\tdelete scope_Events[bind];\n\t\t\t}\n\t\t});\n\t}\n\n\t// Updateable: margin, limit, padding, step, range, animate, snap\n\tfunction updateOptions ( optionsToUpdate, fireSetEvent ) {\n\n\t\t// Spectrum is created using the range, snap, direction and step options.\n\t\t// 'snap' and 'step' can be updated.\n\t\t// If 'snap' and 'step' are not passed, they should remain unchanged.\n\t\tvar v = valueGet();\n\n\t\tvar updateAble = ['margin', 'limit', 'padding', 'range', 'animate', 'snap', 'step', 'format'];\n\n\t\t// Only change options that we're actually passed to update.\n\t\tupdateAble.forEach(function(name){\n\t\t\tif ( optionsToUpdate[name] !== undefined ) {\n\t\t\t\toriginalOptions[name] = optionsToUpdate[name];\n\t\t\t}\n\t\t});\n\n\t\tvar newOptions = testOptions(originalOptions);\n\n\t\t// Load new options into the slider state\n\t\tupdateAble.forEach(function(name){\n\t\t\tif ( optionsToUpdate[name] !== undefined ) {\n\t\t\t\toptions[name] = newOptions[name];\n\t\t\t}\n\t\t});\n\n\t\tscope_Spectrum = newOptions.spectrum;\n\n\t\t// Limit, margin and padding depend on the spectrum but are stored outside of it. (#677)\n\t\toptions.margin = newOptions.margin;\n\t\toptions.limit = newOptions.limit;\n\t\toptions.padding = newOptions.padding;\n\n\t\t// Update pips, removes existing.\n\t\tif ( options.pips ) {\n\t\t\tpips(options.pips);\n\t\t}\n\n\t\t// Invalidate the current positioning so valueSet forces an update.\n\t\tscope_Locations = [];\n\t\tvalueSet(optionsToUpdate.start || v, fireSetEvent);\n\t}\n\n\t// Throw an error if the slider was already initialized.\n\tif ( scope_Target.noUiSlider ) {\n\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): Slider was already initialized.\");\n\t}\n\n\t// Create the base element, initialise HTML and set classes.\n\t// Add handles and connect elements.\n\taddSlider(scope_Target);\n\taddElements(options.connect, scope_Base);\n\n\tscope_Self = {\n\t\tdestroy: destroy,\n\t\tsteps: getCurrentStep,\n\t\ton: bindEvent,\n\t\toff: removeEvent,\n\t\tget: valueGet,\n\t\tset: valueSet,\n\t\treset: valueReset,\n\t\t// Exposed for unit testing, don't use this in your application.\n\t\t__moveHandles: function(a, b, c) { moveHandles(a, b, scope_Locations, c); },\n\t\toptions: originalOptions, // Issue #600, #678\n\t\tupdateOptions: updateOptions,\n\t\ttarget: scope_Target, // Issue #597\n\t\tremovePips: removePips,\n\t\tpips: pips // Issue #594\n\t};\n\n\t// Attach user events.\n\tbindSliderEvents(options.events);\n\n\t// Use the public value method to set the start values.\n\tvalueSet(options.start);\n\n\tif ( options.pips ) {\n\t\tpips(options.pips);\n\t}\n\n\tif ( options.tooltips ) {\n\t\ttooltips();\n\t}\n\n\taria();\n\n\treturn scope_Self;\n\n}\n\n\n\t// Run the standard initializer\n\tfunction initialize ( target, originalOptions ) {\n\n\t\tif ( !target || !target.nodeName ) {\n\t\t\tthrow new Error(\"noUiSlider (\" + VERSION + \"): create requires a single element, got: \" + target);\n\t\t}\n\n\t\t// Test the options and create the slider environment;\n\t\tvar options = testOptions( originalOptions, target );\n\t\tvar api = closure( target, options, originalOptions );\n\n\t\ttarget.noUiSlider = api;\n\n\t\treturn api;\n\t}\n\n\t// Use an object instead of a function for future expansibility;\n\treturn {\n\t\tversion: VERSION,\n\t\tcreate: initialize\n\t};\n\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///45\n");

/***/ }),
/* 46 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUvc2VsZWN0aW9uLXBhbmVsLnNjc3M/NzJlZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI0Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvc3R5bGUvc2VsZWN0aW9uLXBhbmVsLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDQ2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///46\n");

/***/ }),
/* 47 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUvbm91aXNsaWRlci5zY3NzP2RkOTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3N0eWxlL25vdWlzbGlkZXIuc2Nzc1xuLy8gbW9kdWxlIGlkID0gNDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///47\n");

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dom = __webpack_require__(1);\r\nvar on = __webpack_require__(3);\r\nvar domConstruct = __webpack_require__(2);\r\n__webpack_require__(49);\r\nvar BasemapPanel = /** @class */ (function () {\r\n    function BasemapPanel(state) {\r\n        var _this = this;\r\n        this.container = dom.byId('basemapPanel');\r\n        this.basemapContainer = document.querySelector('.basemaps');\r\n        var basemapGroup = state.view.map.layers.filter(function (layer) {\r\n            return (layer.title === 'Basemap');\r\n        }).getItemAt(0);\r\n        basemapGroup.layers.forEach(function (layer) {\r\n            // crazy hack to get access to portalItem property\r\n            var portalLayer = layer;\r\n            var basemapItem = domConstruct.create('div', {\r\n                class: 'basemapItem',\r\n                style: \"background: url(\" + portalLayer.portalItem.thumbnailUrl + \") no-repeat center\",\r\n                'data-id': layer.id,\r\n                innerHTML: \"<div>\" + layer.title + \"</div>\"\r\n            }, _this.basemapContainer);\r\n            on(basemapItem, 'click', function (evt) {\r\n                state.currentBasemapId = evt.target.dataset.id;\r\n            });\r\n        });\r\n    }\r\n    return BasemapPanel;\r\n}());\r\nexports.default = BasemapPanel;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdHMvdWkvQmFzZW1hcFBhbmVsLnRzPzVjZDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpQ0FBZ0M7QUFDaEMsZ0NBQThCO0FBQzlCLDBDQUFtRDtBQUluRCx3QkFBd0M7QUFFeEM7SUFLRSxzQkFBWSxLQUFZO1FBQXhCLGlCQXdCQztRQXZCQyxJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFNUQsSUFBSSxZQUFZLEdBQWUsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFDLEtBQUs7WUFDaEUsTUFBTSxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSyxTQUFTLENBQUMsQ0FBQztRQUNyQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFaEIsWUFBWSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBQyxLQUFLO1lBRWhDLGtEQUFrRDtZQUNsRCxJQUFJLFdBQVcsR0FBZSxLQUFLLENBQUM7WUFDcEMsSUFBSSxXQUFXLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUU7Z0JBQzNDLEtBQUssRUFBRSxhQUFhO2dCQUNwQixLQUFLLEVBQUUscUJBQW1CLFdBQVcsQ0FBQyxVQUFVLENBQUMsWUFBWSx1QkFBb0I7Z0JBQ2pGLFNBQVMsRUFBRSxLQUFLLENBQUMsRUFBRTtnQkFDbkIsU0FBUyxFQUFFLFVBQVEsS0FBSyxDQUFDLEtBQUssV0FBUTthQUN2QyxFQUFFLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1lBRTFCLEVBQUUsQ0FBQyxXQUFXLEVBQUUsT0FBTyxFQUFFLFVBQUMsR0FBRztnQkFDM0IsS0FBSyxDQUFDLGdCQUFnQixHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztZQUNqRCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBRUwsQ0FBQztJQUNILG1CQUFDO0FBQUQsQ0FBQyIsImZpbGUiOiI0OC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGRvbSBmcm9tICdkb2pvL2RvbSc7XHJcbmltcG9ydCAqIGFzIG9uIGZyb20gJ2Rvam8vb24nO1xyXG5pbXBvcnQgKiBhcyBkb21Db25zdHJ1Y3QgZnJvbSAnZG9qby9kb20tY29uc3RydWN0JztcclxuaW1wb3J0IHsgU3RhdGUgfSBmcm9tICcuLi90eXBlcyc7XHJcbmltcG9ydCAqIGFzIEdyb3VwTGF5ZXIgZnJvbSAnZXNyaS9sYXllcnMvR3JvdXBMYXllcic7XHJcblxyXG5pbXBvcnQgJy4uLy4uL3N0eWxlL2Jhc2VtYXAtcGFuZWwuc2Nzcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCYXNlbWFwUGFuZWwge1xyXG5cclxuICBjb250YWluZXI6IGFueTtcclxuICBiYXNlbWFwQ29udGFpbmVyOiBhbnk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHN0YXRlOiBTdGF0ZSkge1xyXG4gICAgdGhpcy5jb250YWluZXIgPSBkb20uYnlJZCgnYmFzZW1hcFBhbmVsJyk7XHJcbiAgICB0aGlzLmJhc2VtYXBDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmFzZW1hcHMnKTtcclxuXHJcbiAgICBsZXQgYmFzZW1hcEdyb3VwID0gPEdyb3VwTGF5ZXI+c3RhdGUudmlldy5tYXAubGF5ZXJzLmZpbHRlcigobGF5ZXIpID0+IHtcclxuICAgICAgcmV0dXJuIChsYXllci50aXRsZSA9PT0gJ0Jhc2VtYXAnKTtcclxuICAgIH0pLmdldEl0ZW1BdCgwKTtcclxuXHJcbiAgICBiYXNlbWFwR3JvdXAubGF5ZXJzLmZvckVhY2goKGxheWVyKSA9PiB7XHJcblxyXG4gICAgICAvLyBjcmF6eSBoYWNrIHRvIGdldCBhY2Nlc3MgdG8gcG9ydGFsSXRlbSBwcm9wZXJ0eVxyXG4gICAgICBsZXQgcG9ydGFsTGF5ZXIgPSA8R3JvdXBMYXllcj5sYXllcjtcclxuICAgICAgbGV0IGJhc2VtYXBJdGVtID0gZG9tQ29uc3RydWN0LmNyZWF0ZSgnZGl2Jywge1xyXG4gICAgICAgIGNsYXNzOiAnYmFzZW1hcEl0ZW0nLFxyXG4gICAgICAgIHN0eWxlOiBgYmFja2dyb3VuZDogdXJsKCR7cG9ydGFsTGF5ZXIucG9ydGFsSXRlbS50aHVtYm5haWxVcmx9KSBuby1yZXBlYXQgY2VudGVyYCxcclxuICAgICAgICAnZGF0YS1pZCc6IGxheWVyLmlkLFxyXG4gICAgICAgIGlubmVySFRNTDogYDxkaXY+JHtsYXllci50aXRsZX08L2Rpdj5gXHJcbiAgICAgIH0sIHRoaXMuYmFzZW1hcENvbnRhaW5lcik7XHJcblxyXG4gICAgICBvbihiYXNlbWFwSXRlbSwgJ2NsaWNrJywgKGV2dCkgPT4ge1xyXG4gICAgICAgIHN0YXRlLmN1cnJlbnRCYXNlbWFwSWQgPSBldnQudGFyZ2V0LmRhdGFzZXQuaWQ7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gIH1cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvdHMvdWkvQmFzZW1hcFBhbmVsLnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///48\n");

/***/ }),
/* 49 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUvYmFzZW1hcC1wYW5lbC5zY3NzP2E1ZWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3N0eWxlL2Jhc2VtYXAtcGFuZWwuc2Nzc1xuLy8gbW9kdWxlIGlkID0gNDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///49\n");

/***/ }),
/* 50 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUvbWVudS1wYW5lbC5zY3NzP2UwMDkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3N0eWxlL21lbnUtcGFuZWwuc2Nzc1xuLy8gbW9kdWxlIGlkID0gNTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///50\n");

/***/ })
/******/ ])});;